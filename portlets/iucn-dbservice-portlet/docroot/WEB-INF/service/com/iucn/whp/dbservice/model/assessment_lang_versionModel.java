/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the assessment_lang_version service. Represents a row in the &quot;whp_assessment_lang_version&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.iucn.whp.dbservice.model.impl.assessment_lang_versionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.iucn.whp.dbservice.model.impl.assessment_lang_versionImpl}.
 * </p>
 *
 * @author alok.sen
 * @see assessment_lang_version
 * @see com.iucn.whp.dbservice.model.impl.assessment_lang_versionImpl
 * @see com.iucn.whp.dbservice.model.impl.assessment_lang_versionModelImpl
 * @generated
 */
public interface assessment_lang_versionModel extends BaseModel<assessment_lang_version> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a assessment_lang_version model instance should use the {@link assessment_lang_version} interface instead.
	 */

	/**
	 * Returns the primary key of this assessment_lang_version.
	 *
	 * @return the primary key of this assessment_lang_version
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this assessment_lang_version.
	 *
	 * @param primaryKey the primary key of this assessment_lang_version
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the lang_ver_id of this assessment_lang_version.
	 *
	 * @return the lang_ver_id of this assessment_lang_version
	 */
	public long getLang_ver_id();

	/**
	 * Sets the lang_ver_id of this assessment_lang_version.
	 *
	 * @param lang_ver_id the lang_ver_id of this assessment_lang_version
	 */
	public void setLang_ver_id(long lang_ver_id);

	/**
	 * Returns the assessmentid of this assessment_lang_version.
	 *
	 * @return the assessmentid of this assessment_lang_version
	 */
	public long getAssessmentid();

	/**
	 * Sets the assessmentid of this assessment_lang_version.
	 *
	 * @param assessmentid the assessmentid of this assessment_lang_version
	 */
	public void setAssessmentid(long assessmentid);

	/**
	 * Returns the assessment_version_id of this assessment_lang_version.
	 *
	 * @return the assessment_version_id of this assessment_lang_version
	 */
	public long getAssessment_version_id();

	/**
	 * Sets the assessment_version_id of this assessment_lang_version.
	 *
	 * @param assessment_version_id the assessment_version_id of this assessment_lang_version
	 */
	public void setAssessment_version_id(long assessment_version_id);

	/**
	 * Returns the languageid of this assessment_lang_version.
	 *
	 * @return the languageid of this assessment_lang_version
	 */
	public long getLanguageid();

	/**
	 * Sets the languageid of this assessment_lang_version.
	 *
	 * @param languageid the languageid of this assessment_lang_version
	 */
	public void setLanguageid(long languageid);

	/**
	 * Returns the published of this assessment_lang_version.
	 *
	 * @return the published of this assessment_lang_version
	 */
	public boolean getPublished();

	/**
	 * Returns <code>true</code> if this assessment_lang_version is published.
	 *
	 * @return <code>true</code> if this assessment_lang_version is published; <code>false</code> otherwise
	 */
	public boolean isPublished();

	/**
	 * Sets whether this assessment_lang_version is published.
	 *
	 * @param published the published of this assessment_lang_version
	 */
	public void setPublished(boolean published);

	/**
	 * Returns the published_date of this assessment_lang_version.
	 *
	 * @return the published_date of this assessment_lang_version
	 */
	public Date getPublished_date();

	/**
	 * Sets the published_date of this assessment_lang_version.
	 *
	 * @param published_date the published_date of this assessment_lang_version
	 */
	public void setPublished_date(Date published_date);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(assessment_lang_version assessment_lang_version);

	public int hashCode();

	public CacheModel<assessment_lang_version> toCacheModel();

	public assessment_lang_version toEscapedModel();

	public String toString();

	public String toXmlString();
}