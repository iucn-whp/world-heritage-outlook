/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the negative_factors_trend service. Represents a row in the &quot;whp_negative_factors_trend&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.iucn.whp.dbservice.model.impl.negative_factors_trendModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.iucn.whp.dbservice.model.impl.negative_factors_trendImpl}.
 * </p>
 *
 * @author alok.sen
 * @see negative_factors_trend
 * @see com.iucn.whp.dbservice.model.impl.negative_factors_trendImpl
 * @see com.iucn.whp.dbservice.model.impl.negative_factors_trendModelImpl
 * @generated
 */
public interface negative_factors_trendModel extends BaseModel<negative_factors_trend> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a negative_factors_trend model instance should use the {@link negative_factors_trend} interface instead.
	 */

	/**
	 * Returns the primary key of this negative_factors_trend.
	 *
	 * @return the primary key of this negative_factors_trend
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this negative_factors_trend.
	 *
	 * @param primaryKey the primary key of this negative_factors_trend
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the trend_id of this negative_factors_trend.
	 *
	 * @return the trend_id of this negative_factors_trend
	 */
	public long getTrend_id();

	/**
	 * Sets the trend_id of this negative_factors_trend.
	 *
	 * @param trend_id the trend_id of this negative_factors_trend
	 */
	public void setTrend_id(long trend_id);

	/**
	 * Returns the trend of this negative_factors_trend.
	 *
	 * @return the trend of this negative_factors_trend
	 */
	@AutoEscape
	public String getTrend();

	/**
	 * Sets the trend of this negative_factors_trend.
	 *
	 * @param trend the trend of this negative_factors_trend
	 */
	public void setTrend(String trend);

	/**
	 * Returns the description of this negative_factors_trend.
	 *
	 * @return the description of this negative_factors_trend
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this negative_factors_trend.
	 *
	 * @param description the description of this negative_factors_trend
	 */
	public void setDescription(String description);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(negative_factors_trend negative_factors_trend);

	public int hashCode();

	public CacheModel<negative_factors_trend> toCacheModel();

	public negative_factors_trend toEscapedModel();

	public String toString();

	public String toXmlString();
}