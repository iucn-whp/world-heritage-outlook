/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.whp_sites_external_documents;
import com.iucn.whp.dbservice.model.whp_sites_external_documentsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the whp_sites_external_documents service. Represents a row in the &quot;whp_whp_sites_external_documents&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.whp_sites_external_documentsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link whp_sites_external_documentsImpl}.
 * </p>
 *
 * @author alok.sen
 * @see whp_sites_external_documentsImpl
 * @see com.iucn.whp.dbservice.model.whp_sites_external_documents
 * @see com.iucn.whp.dbservice.model.whp_sites_external_documentsModel
 * @generated
 */
public class whp_sites_external_documentsModelImpl extends BaseModelImpl<whp_sites_external_documents>
	implements whp_sites_external_documentsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a whp_sites_external_documents model instance should use the {@link com.iucn.whp.dbservice.model.whp_sites_external_documents} interface instead.
	 */
	public static final String TABLE_NAME = "whp_whp_sites_external_documents";
	public static final Object[][] TABLE_COLUMNS = {
			{ "whp_sites_external_documents_id", Types.BIGINT },
			{ "site_id", Types.BIGINT },
			{ "document_description", Types.VARCHAR },
			{ "document_link", Types.VARCHAR },
			{ "fileentryid", Types.BIGINT },
			{ "doc_name", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_whp_sites_external_documents (whp_sites_external_documents_id LONG not null primary key,site_id LONG,document_description VARCHAR(200) null,document_link VARCHAR(500) null,fileentryid LONG,doc_name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table whp_whp_sites_external_documents";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.whp_sites_external_documents"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.whp_sites_external_documents"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.whp_sites_external_documents"),
			true);
	public static long FILEENTRYID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.whp_sites_external_documents"));

	public whp_sites_external_documentsModelImpl() {
	}

	public long getPrimaryKey() {
		return _whp_sites_external_documents_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setWhp_sites_external_documents_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_whp_sites_external_documents_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return whp_sites_external_documents.class;
	}

	public String getModelClassName() {
		return whp_sites_external_documents.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("whp_sites_external_documents_id",
			getWhp_sites_external_documents_id());
		attributes.put("site_id", getSite_id());
		attributes.put("document_description", getDocument_description());
		attributes.put("document_link", getDocument_link());
		attributes.put("fileentryid", getFileentryid());
		attributes.put("doc_name", getDoc_name());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long whp_sites_external_documents_id = (Long)attributes.get(
				"whp_sites_external_documents_id");

		if (whp_sites_external_documents_id != null) {
			setWhp_sites_external_documents_id(whp_sites_external_documents_id);
		}

		Long site_id = (Long)attributes.get("site_id");

		if (site_id != null) {
			setSite_id(site_id);
		}

		String document_description = (String)attributes.get(
				"document_description");

		if (document_description != null) {
			setDocument_description(document_description);
		}

		String document_link = (String)attributes.get("document_link");

		if (document_link != null) {
			setDocument_link(document_link);
		}

		Long fileentryid = (Long)attributes.get("fileentryid");

		if (fileentryid != null) {
			setFileentryid(fileentryid);
		}

		String doc_name = (String)attributes.get("doc_name");

		if (doc_name != null) {
			setDoc_name(doc_name);
		}
	}

	public long getWhp_sites_external_documents_id() {
		return _whp_sites_external_documents_id;
	}

	public void setWhp_sites_external_documents_id(
		long whp_sites_external_documents_id) {
		_whp_sites_external_documents_id = whp_sites_external_documents_id;
	}

	public long getSite_id() {
		return _site_id;
	}

	public void setSite_id(long site_id) {
		_site_id = site_id;
	}

	public String getDocument_description() {
		if (_document_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _document_description;
		}
	}

	public void setDocument_description(String document_description) {
		_document_description = document_description;
	}

	public String getDocument_link() {
		if (_document_link == null) {
			return StringPool.BLANK;
		}
		else {
			return _document_link;
		}
	}

	public void setDocument_link(String document_link) {
		_document_link = document_link;
	}

	public long getFileentryid() {
		return _fileentryid;
	}

	public void setFileentryid(long fileentryid) {
		_columnBitmask |= FILEENTRYID_COLUMN_BITMASK;

		if (!_setOriginalFileentryid) {
			_setOriginalFileentryid = true;

			_originalFileentryid = _fileentryid;
		}

		_fileentryid = fileentryid;
	}

	public long getOriginalFileentryid() {
		return _originalFileentryid;
	}

	public String getDoc_name() {
		if (_doc_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _doc_name;
		}
	}

	public void setDoc_name(String doc_name) {
		_doc_name = doc_name;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			whp_sites_external_documents.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public whp_sites_external_documents toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (whp_sites_external_documents)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		whp_sites_external_documentsImpl whp_sites_external_documentsImpl = new whp_sites_external_documentsImpl();

		whp_sites_external_documentsImpl.setWhp_sites_external_documents_id(getWhp_sites_external_documents_id());
		whp_sites_external_documentsImpl.setSite_id(getSite_id());
		whp_sites_external_documentsImpl.setDocument_description(getDocument_description());
		whp_sites_external_documentsImpl.setDocument_link(getDocument_link());
		whp_sites_external_documentsImpl.setFileentryid(getFileentryid());
		whp_sites_external_documentsImpl.setDoc_name(getDoc_name());

		whp_sites_external_documentsImpl.resetOriginalValues();

		return whp_sites_external_documentsImpl;
	}

	public int compareTo(
		whp_sites_external_documents whp_sites_external_documents) {
		long primaryKey = whp_sites_external_documents.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		whp_sites_external_documents whp_sites_external_documents = null;

		try {
			whp_sites_external_documents = (whp_sites_external_documents)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = whp_sites_external_documents.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		whp_sites_external_documentsModelImpl whp_sites_external_documentsModelImpl =
			this;

		whp_sites_external_documentsModelImpl._originalFileentryid = whp_sites_external_documentsModelImpl._fileentryid;

		whp_sites_external_documentsModelImpl._setOriginalFileentryid = false;

		whp_sites_external_documentsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<whp_sites_external_documents> toCacheModel() {
		whp_sites_external_documentsCacheModel whp_sites_external_documentsCacheModel =
			new whp_sites_external_documentsCacheModel();

		whp_sites_external_documentsCacheModel.whp_sites_external_documents_id = getWhp_sites_external_documents_id();

		whp_sites_external_documentsCacheModel.site_id = getSite_id();

		whp_sites_external_documentsCacheModel.document_description = getDocument_description();

		String document_description = whp_sites_external_documentsCacheModel.document_description;

		if ((document_description != null) &&
				(document_description.length() == 0)) {
			whp_sites_external_documentsCacheModel.document_description = null;
		}

		whp_sites_external_documentsCacheModel.document_link = getDocument_link();

		String document_link = whp_sites_external_documentsCacheModel.document_link;

		if ((document_link != null) && (document_link.length() == 0)) {
			whp_sites_external_documentsCacheModel.document_link = null;
		}

		whp_sites_external_documentsCacheModel.fileentryid = getFileentryid();

		whp_sites_external_documentsCacheModel.doc_name = getDoc_name();

		String doc_name = whp_sites_external_documentsCacheModel.doc_name;

		if ((doc_name != null) && (doc_name.length() == 0)) {
			whp_sites_external_documentsCacheModel.doc_name = null;
		}

		return whp_sites_external_documentsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{whp_sites_external_documents_id=");
		sb.append(getWhp_sites_external_documents_id());
		sb.append(", site_id=");
		sb.append(getSite_id());
		sb.append(", document_description=");
		sb.append(getDocument_description());
		sb.append(", document_link=");
		sb.append(getDocument_link());
		sb.append(", fileentryid=");
		sb.append(getFileentryid());
		sb.append(", doc_name=");
		sb.append(getDoc_name());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.whp_sites_external_documents");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>whp_sites_external_documents_id</column-name><column-value><![CDATA[");
		sb.append(getWhp_sites_external_documents_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>site_id</column-name><column-value><![CDATA[");
		sb.append(getSite_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>document_description</column-name><column-value><![CDATA[");
		sb.append(getDocument_description());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>document_link</column-name><column-value><![CDATA[");
		sb.append(getDocument_link());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileentryid</column-name><column-value><![CDATA[");
		sb.append(getFileentryid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doc_name</column-name><column-value><![CDATA[");
		sb.append(getDoc_name());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = whp_sites_external_documents.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			whp_sites_external_documents.class
		};
	private long _whp_sites_external_documents_id;
	private long _site_id;
	private String _document_description;
	private String _document_link;
	private long _fileentryid;
	private long _originalFileentryid;
	private boolean _setOriginalFileentryid;
	private String _doc_name;
	private long _columnBitmask;
	private whp_sites_external_documents _escapedModelProxy;
}