/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.current_threat_values;
import com.iucn.whp.dbservice.model.current_threat_valuesModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the current_threat_values service. Represents a row in the &quot;whp_current_threat_values&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.current_threat_valuesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link current_threat_valuesImpl}.
 * </p>
 *
 * @author alok.sen
 * @see current_threat_valuesImpl
 * @see com.iucn.whp.dbservice.model.current_threat_values
 * @see com.iucn.whp.dbservice.model.current_threat_valuesModel
 * @generated
 */
public class current_threat_valuesModelImpl extends BaseModelImpl<current_threat_values>
	implements current_threat_valuesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a current_threat_values model instance should use the {@link com.iucn.whp.dbservice.model.current_threat_values} interface instead.
	 */
	public static final String TABLE_NAME = "whp_current_threat_values";
	public static final Object[][] TABLE_COLUMNS = {
			{ "current_threat_values_id", Types.BIGINT },
			{ "current_threat_id", Types.BIGINT },
			{ "whvalues_id", Types.BIGINT },
			{ "is_biodiv_whval", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_current_threat_values (current_threat_values_id LONG not null primary key,current_threat_id LONG,whvalues_id LONG,is_biodiv_whval BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table whp_current_threat_values";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.current_threat_values"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.current_threat_values"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.current_threat_values"),
			true);
	public static long CURRENT_THREAT_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.current_threat_values"));

	public current_threat_valuesModelImpl() {
	}

	public long getPrimaryKey() {
		return _current_threat_values_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setCurrent_threat_values_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_current_threat_values_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return current_threat_values.class;
	}

	public String getModelClassName() {
		return current_threat_values.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("current_threat_values_id", getCurrent_threat_values_id());
		attributes.put("current_threat_id", getCurrent_threat_id());
		attributes.put("whvalues_id", getWhvalues_id());
		attributes.put("is_biodiv_whval", getIs_biodiv_whval());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long current_threat_values_id = (Long)attributes.get(
				"current_threat_values_id");

		if (current_threat_values_id != null) {
			setCurrent_threat_values_id(current_threat_values_id);
		}

		Long current_threat_id = (Long)attributes.get("current_threat_id");

		if (current_threat_id != null) {
			setCurrent_threat_id(current_threat_id);
		}

		Long whvalues_id = (Long)attributes.get("whvalues_id");

		if (whvalues_id != null) {
			setWhvalues_id(whvalues_id);
		}

		Boolean is_biodiv_whval = (Boolean)attributes.get("is_biodiv_whval");

		if (is_biodiv_whval != null) {
			setIs_biodiv_whval(is_biodiv_whval);
		}
	}

	public long getCurrent_threat_values_id() {
		return _current_threat_values_id;
	}

	public void setCurrent_threat_values_id(long current_threat_values_id) {
		_current_threat_values_id = current_threat_values_id;
	}

	public long getCurrent_threat_id() {
		return _current_threat_id;
	}

	public void setCurrent_threat_id(long current_threat_id) {
		_columnBitmask |= CURRENT_THREAT_ID_COLUMN_BITMASK;

		if (!_setOriginalCurrent_threat_id) {
			_setOriginalCurrent_threat_id = true;

			_originalCurrent_threat_id = _current_threat_id;
		}

		_current_threat_id = current_threat_id;
	}

	public long getOriginalCurrent_threat_id() {
		return _originalCurrent_threat_id;
	}

	public long getWhvalues_id() {
		return _whvalues_id;
	}

	public void setWhvalues_id(long whvalues_id) {
		_whvalues_id = whvalues_id;
	}

	public boolean getIs_biodiv_whval() {
		return _is_biodiv_whval;
	}

	public boolean isIs_biodiv_whval() {
		return _is_biodiv_whval;
	}

	public void setIs_biodiv_whval(boolean is_biodiv_whval) {
		_is_biodiv_whval = is_biodiv_whval;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			current_threat_values.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public current_threat_values toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (current_threat_values)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		current_threat_valuesImpl current_threat_valuesImpl = new current_threat_valuesImpl();

		current_threat_valuesImpl.setCurrent_threat_values_id(getCurrent_threat_values_id());
		current_threat_valuesImpl.setCurrent_threat_id(getCurrent_threat_id());
		current_threat_valuesImpl.setWhvalues_id(getWhvalues_id());
		current_threat_valuesImpl.setIs_biodiv_whval(getIs_biodiv_whval());

		current_threat_valuesImpl.resetOriginalValues();

		return current_threat_valuesImpl;
	}

	public int compareTo(current_threat_values current_threat_values) {
		long primaryKey = current_threat_values.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		current_threat_values current_threat_values = null;

		try {
			current_threat_values = (current_threat_values)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = current_threat_values.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		current_threat_valuesModelImpl current_threat_valuesModelImpl = this;

		current_threat_valuesModelImpl._originalCurrent_threat_id = current_threat_valuesModelImpl._current_threat_id;

		current_threat_valuesModelImpl._setOriginalCurrent_threat_id = false;

		current_threat_valuesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<current_threat_values> toCacheModel() {
		current_threat_valuesCacheModel current_threat_valuesCacheModel = new current_threat_valuesCacheModel();

		current_threat_valuesCacheModel.current_threat_values_id = getCurrent_threat_values_id();

		current_threat_valuesCacheModel.current_threat_id = getCurrent_threat_id();

		current_threat_valuesCacheModel.whvalues_id = getWhvalues_id();

		current_threat_valuesCacheModel.is_biodiv_whval = getIs_biodiv_whval();

		return current_threat_valuesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{current_threat_values_id=");
		sb.append(getCurrent_threat_values_id());
		sb.append(", current_threat_id=");
		sb.append(getCurrent_threat_id());
		sb.append(", whvalues_id=");
		sb.append(getWhvalues_id());
		sb.append(", is_biodiv_whval=");
		sb.append(getIs_biodiv_whval());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.current_threat_values");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>current_threat_values_id</column-name><column-value><![CDATA[");
		sb.append(getCurrent_threat_values_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>current_threat_id</column-name><column-value><![CDATA[");
		sb.append(getCurrent_threat_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>whvalues_id</column-name><column-value><![CDATA[");
		sb.append(getWhvalues_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_biodiv_whval</column-name><column-value><![CDATA[");
		sb.append(getIs_biodiv_whval());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = current_threat_values.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			current_threat_values.class
		};
	private long _current_threat_values_id;
	private long _current_threat_id;
	private long _originalCurrent_threat_id;
	private boolean _setOriginalCurrent_threat_id;
	private long _whvalues_id;
	private boolean _is_biodiv_whval;
	private long _columnBitmask;
	private current_threat_values _escapedModelProxy;
}