/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation;
import com.iucn.whp.dbservice.model.whp_sites_iucn_recommendationModel;
import com.iucn.whp.dbservice.model.whp_sites_iucn_recommendationSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the whp_sites_iucn_recommendation service. Represents a row in the &quot;whp_whp_sites_iucn_recommendation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.whp_sites_iucn_recommendationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link whp_sites_iucn_recommendationImpl}.
 * </p>
 *
 * @author alok.sen
 * @see whp_sites_iucn_recommendationImpl
 * @see com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation
 * @see com.iucn.whp.dbservice.model.whp_sites_iucn_recommendationModel
 * @generated
 */
@JSON(strict = true)
public class whp_sites_iucn_recommendationModelImpl extends BaseModelImpl<whp_sites_iucn_recommendation>
	implements whp_sites_iucn_recommendationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a whp_sites_iucn_recommendation model instance should use the {@link com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation} interface instead.
	 */
	public static final String TABLE_NAME = "whp_whp_sites_iucn_recommendation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "whp_sites_iucn_recommendation_id", Types.BIGINT },
			{ "site_id", Types.BIGINT },
			{ "recommendation_type", Types.INTEGER },
			{ "rec_date", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_whp_sites_iucn_recommendation (whp_sites_iucn_recommendation_id LONG not null primary key,site_id LONG,recommendation_type INTEGER,rec_date DATE null)";
	public static final String TABLE_SQL_DROP = "drop table whp_whp_sites_iucn_recommendation";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation"),
			true);
	public static long RECOMMENDATION_TYPE_COLUMN_BITMASK = 1L;
	public static long SITE_ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static whp_sites_iucn_recommendation toModel(
		whp_sites_iucn_recommendationSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		whp_sites_iucn_recommendation model = new whp_sites_iucn_recommendationImpl();

		model.setWhp_sites_iucn_recommendation_id(soapModel.getWhp_sites_iucn_recommendation_id());
		model.setSite_id(soapModel.getSite_id());
		model.setRecommendation_type(soapModel.getRecommendation_type());
		model.setRec_date(soapModel.getRec_date());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<whp_sites_iucn_recommendation> toModels(
		whp_sites_iucn_recommendationSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<whp_sites_iucn_recommendation> models = new ArrayList<whp_sites_iucn_recommendation>(soapModels.length);

		for (whp_sites_iucn_recommendationSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation"));

	public whp_sites_iucn_recommendationModelImpl() {
	}

	public long getPrimaryKey() {
		return _whp_sites_iucn_recommendation_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setWhp_sites_iucn_recommendation_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_whp_sites_iucn_recommendation_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return whp_sites_iucn_recommendation.class;
	}

	public String getModelClassName() {
		return whp_sites_iucn_recommendation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("whp_sites_iucn_recommendation_id",
			getWhp_sites_iucn_recommendation_id());
		attributes.put("site_id", getSite_id());
		attributes.put("recommendation_type", getRecommendation_type());
		attributes.put("rec_date", getRec_date());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long whp_sites_iucn_recommendation_id = (Long)attributes.get(
				"whp_sites_iucn_recommendation_id");

		if (whp_sites_iucn_recommendation_id != null) {
			setWhp_sites_iucn_recommendation_id(whp_sites_iucn_recommendation_id);
		}

		Long site_id = (Long)attributes.get("site_id");

		if (site_id != null) {
			setSite_id(site_id);
		}

		Integer recommendation_type = (Integer)attributes.get(
				"recommendation_type");

		if (recommendation_type != null) {
			setRecommendation_type(recommendation_type);
		}

		Date rec_date = (Date)attributes.get("rec_date");

		if (rec_date != null) {
			setRec_date(rec_date);
		}
	}

	@JSON
	public long getWhp_sites_iucn_recommendation_id() {
		return _whp_sites_iucn_recommendation_id;
	}

	public void setWhp_sites_iucn_recommendation_id(
		long whp_sites_iucn_recommendation_id) {
		_whp_sites_iucn_recommendation_id = whp_sites_iucn_recommendation_id;
	}

	@JSON
	public long getSite_id() {
		return _site_id;
	}

	public void setSite_id(long site_id) {
		_columnBitmask |= SITE_ID_COLUMN_BITMASK;

		if (!_setOriginalSite_id) {
			_setOriginalSite_id = true;

			_originalSite_id = _site_id;
		}

		_site_id = site_id;
	}

	public long getOriginalSite_id() {
		return _originalSite_id;
	}

	@JSON
	public int getRecommendation_type() {
		return _recommendation_type;
	}

	public void setRecommendation_type(int recommendation_type) {
		_columnBitmask |= RECOMMENDATION_TYPE_COLUMN_BITMASK;

		if (!_setOriginalRecommendation_type) {
			_setOriginalRecommendation_type = true;

			_originalRecommendation_type = _recommendation_type;
		}

		_recommendation_type = recommendation_type;
	}

	public int getOriginalRecommendation_type() {
		return _originalRecommendation_type;
	}

	@JSON
	public Date getRec_date() {
		return _rec_date;
	}

	public void setRec_date(Date rec_date) {
		_rec_date = rec_date;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			whp_sites_iucn_recommendation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public whp_sites_iucn_recommendation toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (whp_sites_iucn_recommendation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		whp_sites_iucn_recommendationImpl whp_sites_iucn_recommendationImpl = new whp_sites_iucn_recommendationImpl();

		whp_sites_iucn_recommendationImpl.setWhp_sites_iucn_recommendation_id(getWhp_sites_iucn_recommendation_id());
		whp_sites_iucn_recommendationImpl.setSite_id(getSite_id());
		whp_sites_iucn_recommendationImpl.setRecommendation_type(getRecommendation_type());
		whp_sites_iucn_recommendationImpl.setRec_date(getRec_date());

		whp_sites_iucn_recommendationImpl.resetOriginalValues();

		return whp_sites_iucn_recommendationImpl;
	}

	public int compareTo(
		whp_sites_iucn_recommendation whp_sites_iucn_recommendation) {
		long primaryKey = whp_sites_iucn_recommendation.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		whp_sites_iucn_recommendation whp_sites_iucn_recommendation = null;

		try {
			whp_sites_iucn_recommendation = (whp_sites_iucn_recommendation)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = whp_sites_iucn_recommendation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		whp_sites_iucn_recommendationModelImpl whp_sites_iucn_recommendationModelImpl =
			this;

		whp_sites_iucn_recommendationModelImpl._originalSite_id = whp_sites_iucn_recommendationModelImpl._site_id;

		whp_sites_iucn_recommendationModelImpl._setOriginalSite_id = false;

		whp_sites_iucn_recommendationModelImpl._originalRecommendation_type = whp_sites_iucn_recommendationModelImpl._recommendation_type;

		whp_sites_iucn_recommendationModelImpl._setOriginalRecommendation_type = false;

		whp_sites_iucn_recommendationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<whp_sites_iucn_recommendation> toCacheModel() {
		whp_sites_iucn_recommendationCacheModel whp_sites_iucn_recommendationCacheModel =
			new whp_sites_iucn_recommendationCacheModel();

		whp_sites_iucn_recommendationCacheModel.whp_sites_iucn_recommendation_id = getWhp_sites_iucn_recommendation_id();

		whp_sites_iucn_recommendationCacheModel.site_id = getSite_id();

		whp_sites_iucn_recommendationCacheModel.recommendation_type = getRecommendation_type();

		Date rec_date = getRec_date();

		if (rec_date != null) {
			whp_sites_iucn_recommendationCacheModel.rec_date = rec_date.getTime();
		}
		else {
			whp_sites_iucn_recommendationCacheModel.rec_date = Long.MIN_VALUE;
		}

		return whp_sites_iucn_recommendationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{whp_sites_iucn_recommendation_id=");
		sb.append(getWhp_sites_iucn_recommendation_id());
		sb.append(", site_id=");
		sb.append(getSite_id());
		sb.append(", recommendation_type=");
		sb.append(getRecommendation_type());
		sb.append(", rec_date=");
		sb.append(getRec_date());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.whp_sites_iucn_recommendation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>whp_sites_iucn_recommendation_id</column-name><column-value><![CDATA[");
		sb.append(getWhp_sites_iucn_recommendation_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>site_id</column-name><column-value><![CDATA[");
		sb.append(getSite_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recommendation_type</column-name><column-value><![CDATA[");
		sb.append(getRecommendation_type());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rec_date</column-name><column-value><![CDATA[");
		sb.append(getRec_date());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = whp_sites_iucn_recommendation.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			whp_sites_iucn_recommendation.class
		};
	private long _whp_sites_iucn_recommendation_id;
	private long _site_id;
	private long _originalSite_id;
	private boolean _setOriginalSite_id;
	private int _recommendation_type;
	private int _originalRecommendation_type;
	private boolean _setOriginalRecommendation_type;
	private Date _rec_date;
	private long _columnBitmask;
	private whp_sites_iucn_recommendation _escapedModelProxy;
}