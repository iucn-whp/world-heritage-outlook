/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.active_conservation_projects;
import com.iucn.whp.dbservice.model.active_conservation_projectsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the active_conservation_projects service. Represents a row in the &quot;whp_active_conservation_projects&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.active_conservation_projectsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link active_conservation_projectsImpl}.
 * </p>
 *
 * @author alok.sen
 * @see active_conservation_projectsImpl
 * @see com.iucn.whp.dbservice.model.active_conservation_projects
 * @see com.iucn.whp.dbservice.model.active_conservation_projectsModel
 * @generated
 */
public class active_conservation_projectsModelImpl extends BaseModelImpl<active_conservation_projects>
	implements active_conservation_projectsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a active_conservation_projects model instance should use the {@link com.iucn.whp.dbservice.model.active_conservation_projects} interface instead.
	 */
	public static final String TABLE_NAME = "whp_active_conservation_projects";
	public static final Object[][] TABLE_COLUMNS = {
			{ "acpid", Types.BIGINT },
			{ "assessment_version_id", Types.BIGINT },
			{ "organization_individual", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "contact_details", Types.VARCHAR },
			{ "projectDurationFrom", Types.VARCHAR },
			{ "projectDurationTo", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_active_conservation_projects (acpid LONG not null primary key,assessment_version_id LONG,organization_individual VARCHAR(400) null,description STRING null,contact_details VARCHAR(500) null,projectDurationFrom VARCHAR(75) null,projectDurationTo VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table whp_active_conservation_projects";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.active_conservation_projects"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.active_conservation_projects"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.active_conservation_projects"),
			true);
	public static long ASSESSMENT_VERSION_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.active_conservation_projects"));

	public active_conservation_projectsModelImpl() {
	}

	public long getPrimaryKey() {
		return _acpid;
	}

	public void setPrimaryKey(long primaryKey) {
		setAcpid(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_acpid);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return active_conservation_projects.class;
	}

	public String getModelClassName() {
		return active_conservation_projects.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("acpid", getAcpid());
		attributes.put("assessment_version_id", getAssessment_version_id());
		attributes.put("organization_individual", getOrganization_individual());
		attributes.put("description", getDescription());
		attributes.put("contact_details", getContact_details());
		attributes.put("projectDurationFrom", getProjectDurationFrom());
		attributes.put("projectDurationTo", getProjectDurationTo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long acpid = (Long)attributes.get("acpid");

		if (acpid != null) {
			setAcpid(acpid);
		}

		Long assessment_version_id = (Long)attributes.get(
				"assessment_version_id");

		if (assessment_version_id != null) {
			setAssessment_version_id(assessment_version_id);
		}

		String organization_individual = (String)attributes.get(
				"organization_individual");

		if (organization_individual != null) {
			setOrganization_individual(organization_individual);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String contact_details = (String)attributes.get("contact_details");

		if (contact_details != null) {
			setContact_details(contact_details);
		}

		String projectDurationFrom = (String)attributes.get(
				"projectDurationFrom");

		if (projectDurationFrom != null) {
			setProjectDurationFrom(projectDurationFrom);
		}

		String projectDurationTo = (String)attributes.get("projectDurationTo");

		if (projectDurationTo != null) {
			setProjectDurationTo(projectDurationTo);
		}
	}

	public long getAcpid() {
		return _acpid;
	}

	public void setAcpid(long acpid) {
		_acpid = acpid;
	}

	public long getAssessment_version_id() {
		return _assessment_version_id;
	}

	public void setAssessment_version_id(long assessment_version_id) {
		_columnBitmask |= ASSESSMENT_VERSION_ID_COLUMN_BITMASK;

		if (!_setOriginalAssessment_version_id) {
			_setOriginalAssessment_version_id = true;

			_originalAssessment_version_id = _assessment_version_id;
		}

		_assessment_version_id = assessment_version_id;
	}

	public long getOriginalAssessment_version_id() {
		return _originalAssessment_version_id;
	}

	public String getOrganization_individual() {
		if (_organization_individual == null) {
			return StringPool.BLANK;
		}
		else {
			return _organization_individual;
		}
	}

	public void setOrganization_individual(String organization_individual) {
		_organization_individual = organization_individual;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public String getContact_details() {
		if (_contact_details == null) {
			return StringPool.BLANK;
		}
		else {
			return _contact_details;
		}
	}

	public void setContact_details(String contact_details) {
		_contact_details = contact_details;
	}

	public String getProjectDurationFrom() {
		if (_projectDurationFrom == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectDurationFrom;
		}
	}

	public void setProjectDurationFrom(String projectDurationFrom) {
		_projectDurationFrom = projectDurationFrom;
	}

	public String getProjectDurationTo() {
		if (_projectDurationTo == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectDurationTo;
		}
	}

	public void setProjectDurationTo(String projectDurationTo) {
		_projectDurationTo = projectDurationTo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			active_conservation_projects.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public active_conservation_projects toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (active_conservation_projects)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		active_conservation_projectsImpl active_conservation_projectsImpl = new active_conservation_projectsImpl();

		active_conservation_projectsImpl.setAcpid(getAcpid());
		active_conservation_projectsImpl.setAssessment_version_id(getAssessment_version_id());
		active_conservation_projectsImpl.setOrganization_individual(getOrganization_individual());
		active_conservation_projectsImpl.setDescription(getDescription());
		active_conservation_projectsImpl.setContact_details(getContact_details());
		active_conservation_projectsImpl.setProjectDurationFrom(getProjectDurationFrom());
		active_conservation_projectsImpl.setProjectDurationTo(getProjectDurationTo());

		active_conservation_projectsImpl.resetOriginalValues();

		return active_conservation_projectsImpl;
	}

	public int compareTo(
		active_conservation_projects active_conservation_projects) {
		long primaryKey = active_conservation_projects.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		active_conservation_projects active_conservation_projects = null;

		try {
			active_conservation_projects = (active_conservation_projects)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = active_conservation_projects.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		active_conservation_projectsModelImpl active_conservation_projectsModelImpl =
			this;

		active_conservation_projectsModelImpl._originalAssessment_version_id = active_conservation_projectsModelImpl._assessment_version_id;

		active_conservation_projectsModelImpl._setOriginalAssessment_version_id = false;

		active_conservation_projectsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<active_conservation_projects> toCacheModel() {
		active_conservation_projectsCacheModel active_conservation_projectsCacheModel =
			new active_conservation_projectsCacheModel();

		active_conservation_projectsCacheModel.acpid = getAcpid();

		active_conservation_projectsCacheModel.assessment_version_id = getAssessment_version_id();

		active_conservation_projectsCacheModel.organization_individual = getOrganization_individual();

		String organization_individual = active_conservation_projectsCacheModel.organization_individual;

		if ((organization_individual != null) &&
				(organization_individual.length() == 0)) {
			active_conservation_projectsCacheModel.organization_individual = null;
		}

		active_conservation_projectsCacheModel.description = getDescription();

		String description = active_conservation_projectsCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			active_conservation_projectsCacheModel.description = null;
		}

		active_conservation_projectsCacheModel.contact_details = getContact_details();

		String contact_details = active_conservation_projectsCacheModel.contact_details;

		if ((contact_details != null) && (contact_details.length() == 0)) {
			active_conservation_projectsCacheModel.contact_details = null;
		}

		active_conservation_projectsCacheModel.projectDurationFrom = getProjectDurationFrom();

		String projectDurationFrom = active_conservation_projectsCacheModel.projectDurationFrom;

		if ((projectDurationFrom != null) &&
				(projectDurationFrom.length() == 0)) {
			active_conservation_projectsCacheModel.projectDurationFrom = null;
		}

		active_conservation_projectsCacheModel.projectDurationTo = getProjectDurationTo();

		String projectDurationTo = active_conservation_projectsCacheModel.projectDurationTo;

		if ((projectDurationTo != null) && (projectDurationTo.length() == 0)) {
			active_conservation_projectsCacheModel.projectDurationTo = null;
		}

		return active_conservation_projectsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{acpid=");
		sb.append(getAcpid());
		sb.append(", assessment_version_id=");
		sb.append(getAssessment_version_id());
		sb.append(", organization_individual=");
		sb.append(getOrganization_individual());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", contact_details=");
		sb.append(getContact_details());
		sb.append(", projectDurationFrom=");
		sb.append(getProjectDurationFrom());
		sb.append(", projectDurationTo=");
		sb.append(getProjectDurationTo());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.active_conservation_projects");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>acpid</column-name><column-value><![CDATA[");
		sb.append(getAcpid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessment_version_id</column-name><column-value><![CDATA[");
		sb.append(getAssessment_version_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organization_individual</column-name><column-value><![CDATA[");
		sb.append(getOrganization_individual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contact_details</column-name><column-value><![CDATA[");
		sb.append(getContact_details());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectDurationFrom</column-name><column-value><![CDATA[");
		sb.append(getProjectDurationFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectDurationTo</column-name><column-value><![CDATA[");
		sb.append(getProjectDurationTo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = active_conservation_projects.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			active_conservation_projects.class
		};
	private long _acpid;
	private long _assessment_version_id;
	private long _originalAssessment_version_id;
	private boolean _setOriginalAssessment_version_id;
	private String _organization_individual;
	private String _description;
	private String _contact_details;
	private String _projectDurationFrom;
	private String _projectDurationTo;
	private long _columnBitmask;
	private active_conservation_projects _escapedModelProxy;
}