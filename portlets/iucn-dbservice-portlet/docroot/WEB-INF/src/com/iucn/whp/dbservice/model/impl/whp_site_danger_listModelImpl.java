/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.whp_site_danger_list;
import com.iucn.whp.dbservice.model.whp_site_danger_listModel;
import com.iucn.whp.dbservice.model.whp_site_danger_listSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the whp_site_danger_list service. Represents a row in the &quot;whp_whp_site_danger_list&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.whp_site_danger_listModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link whp_site_danger_listImpl}.
 * </p>
 *
 * @author alok.sen
 * @see whp_site_danger_listImpl
 * @see com.iucn.whp.dbservice.model.whp_site_danger_list
 * @see com.iucn.whp.dbservice.model.whp_site_danger_listModel
 * @generated
 */
@JSON(strict = true)
public class whp_site_danger_listModelImpl extends BaseModelImpl<whp_site_danger_list>
	implements whp_site_danger_listModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a whp_site_danger_list model instance should use the {@link com.iucn.whp.dbservice.model.whp_site_danger_list} interface instead.
	 */
	public static final String TABLE_NAME = "whp_whp_site_danger_list";
	public static final Object[][] TABLE_COLUMNS = {
			{ "whp_site_danger_list_id", Types.BIGINT },
			{ "site_id", Types.BIGINT },
			{ "status_id", Types.INTEGER },
			{ "year", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_whp_site_danger_list (whp_site_danger_list_id LONG not null primary key,site_id LONG,status_id INTEGER,year DATE null)";
	public static final String TABLE_SQL_DROP = "drop table whp_whp_site_danger_list";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.whp_site_danger_list"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.whp_site_danger_list"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.whp_site_danger_list"),
			true);
	public static long SITE_ID_COLUMN_BITMASK = 1L;
	public static long STATUS_ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static whp_site_danger_list toModel(
		whp_site_danger_listSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		whp_site_danger_list model = new whp_site_danger_listImpl();

		model.setWhp_site_danger_list_id(soapModel.getWhp_site_danger_list_id());
		model.setSite_id(soapModel.getSite_id());
		model.setStatus_id(soapModel.getStatus_id());
		model.setYear(soapModel.getYear());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<whp_site_danger_list> toModels(
		whp_site_danger_listSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<whp_site_danger_list> models = new ArrayList<whp_site_danger_list>(soapModels.length);

		for (whp_site_danger_listSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.whp_site_danger_list"));

	public whp_site_danger_listModelImpl() {
	}

	public long getPrimaryKey() {
		return _whp_site_danger_list_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setWhp_site_danger_list_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_whp_site_danger_list_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return whp_site_danger_list.class;
	}

	public String getModelClassName() {
		return whp_site_danger_list.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("whp_site_danger_list_id", getWhp_site_danger_list_id());
		attributes.put("site_id", getSite_id());
		attributes.put("status_id", getStatus_id());
		attributes.put("year", getYear());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long whp_site_danger_list_id = (Long)attributes.get(
				"whp_site_danger_list_id");

		if (whp_site_danger_list_id != null) {
			setWhp_site_danger_list_id(whp_site_danger_list_id);
		}

		Long site_id = (Long)attributes.get("site_id");

		if (site_id != null) {
			setSite_id(site_id);
		}

		Integer status_id = (Integer)attributes.get("status_id");

		if (status_id != null) {
			setStatus_id(status_id);
		}

		Date year = (Date)attributes.get("year");

		if (year != null) {
			setYear(year);
		}
	}

	@JSON
	public long getWhp_site_danger_list_id() {
		return _whp_site_danger_list_id;
	}

	public void setWhp_site_danger_list_id(long whp_site_danger_list_id) {
		_whp_site_danger_list_id = whp_site_danger_list_id;
	}

	@JSON
	public long getSite_id() {
		return _site_id;
	}

	public void setSite_id(long site_id) {
		_columnBitmask |= SITE_ID_COLUMN_BITMASK;

		if (!_setOriginalSite_id) {
			_setOriginalSite_id = true;

			_originalSite_id = _site_id;
		}

		_site_id = site_id;
	}

	public long getOriginalSite_id() {
		return _originalSite_id;
	}

	@JSON
	public int getStatus_id() {
		return _status_id;
	}

	public void setStatus_id(int status_id) {
		_columnBitmask |= STATUS_ID_COLUMN_BITMASK;

		if (!_setOriginalStatus_id) {
			_setOriginalStatus_id = true;

			_originalStatus_id = _status_id;
		}

		_status_id = status_id;
	}

	public int getOriginalStatus_id() {
		return _originalStatus_id;
	}

	@JSON
	public Date getYear() {
		return _year;
	}

	public void setYear(Date year) {
		_year = year;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			whp_site_danger_list.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public whp_site_danger_list toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (whp_site_danger_list)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		whp_site_danger_listImpl whp_site_danger_listImpl = new whp_site_danger_listImpl();

		whp_site_danger_listImpl.setWhp_site_danger_list_id(getWhp_site_danger_list_id());
		whp_site_danger_listImpl.setSite_id(getSite_id());
		whp_site_danger_listImpl.setStatus_id(getStatus_id());
		whp_site_danger_listImpl.setYear(getYear());

		whp_site_danger_listImpl.resetOriginalValues();

		return whp_site_danger_listImpl;
	}

	public int compareTo(whp_site_danger_list whp_site_danger_list) {
		long primaryKey = whp_site_danger_list.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		whp_site_danger_list whp_site_danger_list = null;

		try {
			whp_site_danger_list = (whp_site_danger_list)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = whp_site_danger_list.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		whp_site_danger_listModelImpl whp_site_danger_listModelImpl = this;

		whp_site_danger_listModelImpl._originalSite_id = whp_site_danger_listModelImpl._site_id;

		whp_site_danger_listModelImpl._setOriginalSite_id = false;

		whp_site_danger_listModelImpl._originalStatus_id = whp_site_danger_listModelImpl._status_id;

		whp_site_danger_listModelImpl._setOriginalStatus_id = false;

		whp_site_danger_listModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<whp_site_danger_list> toCacheModel() {
		whp_site_danger_listCacheModel whp_site_danger_listCacheModel = new whp_site_danger_listCacheModel();

		whp_site_danger_listCacheModel.whp_site_danger_list_id = getWhp_site_danger_list_id();

		whp_site_danger_listCacheModel.site_id = getSite_id();

		whp_site_danger_listCacheModel.status_id = getStatus_id();

		Date year = getYear();

		if (year != null) {
			whp_site_danger_listCacheModel.year = year.getTime();
		}
		else {
			whp_site_danger_listCacheModel.year = Long.MIN_VALUE;
		}

		return whp_site_danger_listCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{whp_site_danger_list_id=");
		sb.append(getWhp_site_danger_list_id());
		sb.append(", site_id=");
		sb.append(getSite_id());
		sb.append(", status_id=");
		sb.append(getStatus_id());
		sb.append(", year=");
		sb.append(getYear());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.whp_site_danger_list");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>whp_site_danger_list_id</column-name><column-value><![CDATA[");
		sb.append(getWhp_site_danger_list_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>site_id</column-name><column-value><![CDATA[");
		sb.append(getSite_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status_id</column-name><column-value><![CDATA[");
		sb.append(getStatus_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = whp_site_danger_list.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			whp_site_danger_list.class
		};
	private long _whp_site_danger_list_id;
	private long _site_id;
	private long _originalSite_id;
	private boolean _setOriginalSite_id;
	private int _status_id;
	private int _originalStatus_id;
	private boolean _setOriginalStatus_id;
	private Date _year;
	private long _columnBitmask;
	private whp_site_danger_list _escapedModelProxy;
}