/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.site_assessment;
import com.iucn.whp.dbservice.model.site_assessmentModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the site_assessment service. Represents a row in the &quot;whp_site_assessment&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.site_assessmentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link site_assessmentImpl}.
 * </p>
 *
 * @author alok.sen
 * @see site_assessmentImpl
 * @see com.iucn.whp.dbservice.model.site_assessment
 * @see com.iucn.whp.dbservice.model.site_assessmentModel
 * @generated
 */
public class site_assessmentModelImpl extends BaseModelImpl<site_assessment>
	implements site_assessmentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a site_assessment model instance should use the {@link com.iucn.whp.dbservice.model.site_assessment} interface instead.
	 */
	public static final String TABLE_NAME = "whp_site_assessment";
	public static final Object[][] TABLE_COLUMNS = {
			{ "assessment_id", Types.BIGINT },
			{ "site_id", Types.BIGINT },
			{ "status_id", Types.BIGINT },
			{ "initiation_date", Types.TIMESTAMP },
			{ "current_userid", Types.BIGINT },
			{ "current_stageid", Types.BIGINT },
			{ "assessment_initiated_by", Types.BIGINT },
			{ "base_langid", Types.BIGINT },
			{ "archived", Types.BOOLEAN },
			{ "is_active", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_site_assessment (assessment_id LONG not null primary key,site_id LONG,status_id LONG,initiation_date DATE null,current_userid LONG,current_stageid LONG,assessment_initiated_by LONG,base_langid LONG,archived BOOLEAN,is_active BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table whp_site_assessment";
	public static final String ORDER_BY_JPQL = " ORDER BY site_assessment.initiation_date DESC";
	public static final String ORDER_BY_SQL = " ORDER BY whp_site_assessment.initiation_date DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.site_assessment"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.site_assessment"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.site_assessment"),
			true);
	public static long ARCHIVED_COLUMN_BITMASK = 1L;
	public static long CURRENT_USERID_COLUMN_BITMASK = 2L;
	public static long IS_ACTIVE_COLUMN_BITMASK = 4L;
	public static long SITE_ID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.site_assessment"));

	public site_assessmentModelImpl() {
	}

	public long getPrimaryKey() {
		return _assessment_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setAssessment_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_assessment_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return site_assessment.class;
	}

	public String getModelClassName() {
		return site_assessment.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("assessment_id", getAssessment_id());
		attributes.put("site_id", getSite_id());
		attributes.put("status_id", getStatus_id());
		attributes.put("initiation_date", getInitiation_date());
		attributes.put("current_userid", getCurrent_userid());
		attributes.put("current_stageid", getCurrent_stageid());
		attributes.put("assessment_initiated_by", getAssessment_initiated_by());
		attributes.put("base_langid", getBase_langid());
		attributes.put("archived", getArchived());
		attributes.put("is_active", getIs_active());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long assessment_id = (Long)attributes.get("assessment_id");

		if (assessment_id != null) {
			setAssessment_id(assessment_id);
		}

		Long site_id = (Long)attributes.get("site_id");

		if (site_id != null) {
			setSite_id(site_id);
		}

		Long status_id = (Long)attributes.get("status_id");

		if (status_id != null) {
			setStatus_id(status_id);
		}

		Date initiation_date = (Date)attributes.get("initiation_date");

		if (initiation_date != null) {
			setInitiation_date(initiation_date);
		}

		Long current_userid = (Long)attributes.get("current_userid");

		if (current_userid != null) {
			setCurrent_userid(current_userid);
		}

		Long current_stageid = (Long)attributes.get("current_stageid");

		if (current_stageid != null) {
			setCurrent_stageid(current_stageid);
		}

		Long assessment_initiated_by = (Long)attributes.get(
				"assessment_initiated_by");

		if (assessment_initiated_by != null) {
			setAssessment_initiated_by(assessment_initiated_by);
		}

		Long base_langid = (Long)attributes.get("base_langid");

		if (base_langid != null) {
			setBase_langid(base_langid);
		}

		Boolean archived = (Boolean)attributes.get("archived");

		if (archived != null) {
			setArchived(archived);
		}

		Boolean is_active = (Boolean)attributes.get("is_active");

		if (is_active != null) {
			setIs_active(is_active);
		}
	}

	public long getAssessment_id() {
		return _assessment_id;
	}

	public void setAssessment_id(long assessment_id) {
		_assessment_id = assessment_id;
	}

	public long getSite_id() {
		return _site_id;
	}

	public void setSite_id(long site_id) {
		_columnBitmask |= SITE_ID_COLUMN_BITMASK;

		if (!_setOriginalSite_id) {
			_setOriginalSite_id = true;

			_originalSite_id = _site_id;
		}

		_site_id = site_id;
	}

	public long getOriginalSite_id() {
		return _originalSite_id;
	}

	public long getStatus_id() {
		return _status_id;
	}

	public void setStatus_id(long status_id) {
		_status_id = status_id;
	}

	public Date getInitiation_date() {
		return _initiation_date;
	}

	public void setInitiation_date(Date initiation_date) {
		_columnBitmask = -1L;

		_initiation_date = initiation_date;
	}

	public long getCurrent_userid() {
		return _current_userid;
	}

	public void setCurrent_userid(long current_userid) {
		_columnBitmask |= CURRENT_USERID_COLUMN_BITMASK;

		if (!_setOriginalCurrent_userid) {
			_setOriginalCurrent_userid = true;

			_originalCurrent_userid = _current_userid;
		}

		_current_userid = current_userid;
	}

	public long getOriginalCurrent_userid() {
		return _originalCurrent_userid;
	}

	public long getCurrent_stageid() {
		return _current_stageid;
	}

	public void setCurrent_stageid(long current_stageid) {
		_current_stageid = current_stageid;
	}

	public long getAssessment_initiated_by() {
		return _assessment_initiated_by;
	}

	public void setAssessment_initiated_by(long assessment_initiated_by) {
		_assessment_initiated_by = assessment_initiated_by;
	}

	public long getBase_langid() {
		return _base_langid;
	}

	public void setBase_langid(long base_langid) {
		_base_langid = base_langid;
	}

	public boolean getArchived() {
		return _archived;
	}

	public boolean isArchived() {
		return _archived;
	}

	public void setArchived(boolean archived) {
		_columnBitmask |= ARCHIVED_COLUMN_BITMASK;

		if (!_setOriginalArchived) {
			_setOriginalArchived = true;

			_originalArchived = _archived;
		}

		_archived = archived;
	}

	public boolean getOriginalArchived() {
		return _originalArchived;
	}

	public boolean getIs_active() {
		return _is_active;
	}

	public boolean isIs_active() {
		return _is_active;
	}

	public void setIs_active(boolean is_active) {
		_columnBitmask |= IS_ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalIs_active) {
			_setOriginalIs_active = true;

			_originalIs_active = _is_active;
		}

		_is_active = is_active;
	}

	public boolean getOriginalIs_active() {
		return _originalIs_active;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			site_assessment.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public site_assessment toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (site_assessment)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		site_assessmentImpl site_assessmentImpl = new site_assessmentImpl();

		site_assessmentImpl.setAssessment_id(getAssessment_id());
		site_assessmentImpl.setSite_id(getSite_id());
		site_assessmentImpl.setStatus_id(getStatus_id());
		site_assessmentImpl.setInitiation_date(getInitiation_date());
		site_assessmentImpl.setCurrent_userid(getCurrent_userid());
		site_assessmentImpl.setCurrent_stageid(getCurrent_stageid());
		site_assessmentImpl.setAssessment_initiated_by(getAssessment_initiated_by());
		site_assessmentImpl.setBase_langid(getBase_langid());
		site_assessmentImpl.setArchived(getArchived());
		site_assessmentImpl.setIs_active(getIs_active());

		site_assessmentImpl.resetOriginalValues();

		return site_assessmentImpl;
	}

	public int compareTo(site_assessment site_assessment) {
		int value = 0;

		value = DateUtil.compareTo(getInitiation_date(),
				site_assessment.getInitiation_date());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		site_assessment site_assessment = null;

		try {
			site_assessment = (site_assessment)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = site_assessment.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		site_assessmentModelImpl site_assessmentModelImpl = this;

		site_assessmentModelImpl._originalSite_id = site_assessmentModelImpl._site_id;

		site_assessmentModelImpl._setOriginalSite_id = false;

		site_assessmentModelImpl._originalCurrent_userid = site_assessmentModelImpl._current_userid;

		site_assessmentModelImpl._setOriginalCurrent_userid = false;

		site_assessmentModelImpl._originalArchived = site_assessmentModelImpl._archived;

		site_assessmentModelImpl._setOriginalArchived = false;

		site_assessmentModelImpl._originalIs_active = site_assessmentModelImpl._is_active;

		site_assessmentModelImpl._setOriginalIs_active = false;

		site_assessmentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<site_assessment> toCacheModel() {
		site_assessmentCacheModel site_assessmentCacheModel = new site_assessmentCacheModel();

		site_assessmentCacheModel.assessment_id = getAssessment_id();

		site_assessmentCacheModel.site_id = getSite_id();

		site_assessmentCacheModel.status_id = getStatus_id();

		Date initiation_date = getInitiation_date();

		if (initiation_date != null) {
			site_assessmentCacheModel.initiation_date = initiation_date.getTime();
		}
		else {
			site_assessmentCacheModel.initiation_date = Long.MIN_VALUE;
		}

		site_assessmentCacheModel.current_userid = getCurrent_userid();

		site_assessmentCacheModel.current_stageid = getCurrent_stageid();

		site_assessmentCacheModel.assessment_initiated_by = getAssessment_initiated_by();

		site_assessmentCacheModel.base_langid = getBase_langid();

		site_assessmentCacheModel.archived = getArchived();

		site_assessmentCacheModel.is_active = getIs_active();

		return site_assessmentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{assessment_id=");
		sb.append(getAssessment_id());
		sb.append(", site_id=");
		sb.append(getSite_id());
		sb.append(", status_id=");
		sb.append(getStatus_id());
		sb.append(", initiation_date=");
		sb.append(getInitiation_date());
		sb.append(", current_userid=");
		sb.append(getCurrent_userid());
		sb.append(", current_stageid=");
		sb.append(getCurrent_stageid());
		sb.append(", assessment_initiated_by=");
		sb.append(getAssessment_initiated_by());
		sb.append(", base_langid=");
		sb.append(getBase_langid());
		sb.append(", archived=");
		sb.append(getArchived());
		sb.append(", is_active=");
		sb.append(getIs_active());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.site_assessment");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>assessment_id</column-name><column-value><![CDATA[");
		sb.append(getAssessment_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>site_id</column-name><column-value><![CDATA[");
		sb.append(getSite_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status_id</column-name><column-value><![CDATA[");
		sb.append(getStatus_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>initiation_date</column-name><column-value><![CDATA[");
		sb.append(getInitiation_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>current_userid</column-name><column-value><![CDATA[");
		sb.append(getCurrent_userid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>current_stageid</column-name><column-value><![CDATA[");
		sb.append(getCurrent_stageid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessment_initiated_by</column-name><column-value><![CDATA[");
		sb.append(getAssessment_initiated_by());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_langid</column-name><column-value><![CDATA[");
		sb.append(getBase_langid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>archived</column-name><column-value><![CDATA[");
		sb.append(getArchived());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_active</column-name><column-value><![CDATA[");
		sb.append(getIs_active());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = site_assessment.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			site_assessment.class
		};
	private long _assessment_id;
	private long _site_id;
	private long _originalSite_id;
	private boolean _setOriginalSite_id;
	private long _status_id;
	private Date _initiation_date;
	private long _current_userid;
	private long _originalCurrent_userid;
	private boolean _setOriginalCurrent_userid;
	private long _current_stageid;
	private long _assessment_initiated_by;
	private long _base_langid;
	private boolean _archived;
	private boolean _originalArchived;
	private boolean _setOriginalArchived;
	private boolean _is_active;
	private boolean _originalIs_active;
	private boolean _setOriginalIs_active;
	private long _columnBitmask;
	private site_assessment _escapedModelProxy;
}