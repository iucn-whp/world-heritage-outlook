/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.iucn_pa_lkp_category;
import com.iucn.whp.dbservice.model.iucn_pa_lkp_categoryModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the iucn_pa_lkp_category service. Represents a row in the &quot;whp_iucn_pa_lkp_category&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.iucn_pa_lkp_categoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link iucn_pa_lkp_categoryImpl}.
 * </p>
 *
 * @author alok.sen
 * @see iucn_pa_lkp_categoryImpl
 * @see com.iucn.whp.dbservice.model.iucn_pa_lkp_category
 * @see com.iucn.whp.dbservice.model.iucn_pa_lkp_categoryModel
 * @generated
 */
public class iucn_pa_lkp_categoryModelImpl extends BaseModelImpl<iucn_pa_lkp_category>
	implements iucn_pa_lkp_categoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a iucn_pa_lkp_category model instance should use the {@link com.iucn.whp.dbservice.model.iucn_pa_lkp_category} interface instead.
	 */
	public static final String TABLE_NAME = "whp_iucn_pa_lkp_category";
	public static final Object[][] TABLE_COLUMNS = {
			{ "iucn_pa_category_id", Types.INTEGER },
			{ "category", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_iucn_pa_lkp_category (iucn_pa_category_id INTEGER not null primary key,category VARCHAR(50) null)";
	public static final String TABLE_SQL_DROP = "drop table whp_iucn_pa_lkp_category";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.iucn_pa_lkp_category"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.iucn_pa_lkp_category"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.iucn_pa_lkp_category"));

	public iucn_pa_lkp_categoryModelImpl() {
	}

	public int getPrimaryKey() {
		return _iucn_pa_category_id;
	}

	public void setPrimaryKey(int primaryKey) {
		setIucn_pa_category_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Integer(_iucn_pa_category_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	public Class<?> getModelClass() {
		return iucn_pa_lkp_category.class;
	}

	public String getModelClassName() {
		return iucn_pa_lkp_category.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("iucn_pa_category_id", getIucn_pa_category_id());
		attributes.put("category", getCategory());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer iucn_pa_category_id = (Integer)attributes.get(
				"iucn_pa_category_id");

		if (iucn_pa_category_id != null) {
			setIucn_pa_category_id(iucn_pa_category_id);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}
	}

	public int getIucn_pa_category_id() {
		return _iucn_pa_category_id;
	}

	public void setIucn_pa_category_id(int iucn_pa_category_id) {
		_iucn_pa_category_id = iucn_pa_category_id;
	}

	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	public void setCategory(String category) {
		_category = category;
	}

	@Override
	public iucn_pa_lkp_category toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (iucn_pa_lkp_category)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		iucn_pa_lkp_categoryImpl iucn_pa_lkp_categoryImpl = new iucn_pa_lkp_categoryImpl();

		iucn_pa_lkp_categoryImpl.setIucn_pa_category_id(getIucn_pa_category_id());
		iucn_pa_lkp_categoryImpl.setCategory(getCategory());

		iucn_pa_lkp_categoryImpl.resetOriginalValues();

		return iucn_pa_lkp_categoryImpl;
	}

	public int compareTo(iucn_pa_lkp_category iucn_pa_lkp_category) {
		int primaryKey = iucn_pa_lkp_category.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		iucn_pa_lkp_category iucn_pa_lkp_category = null;

		try {
			iucn_pa_lkp_category = (iucn_pa_lkp_category)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		int primaryKey = iucn_pa_lkp_category.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<iucn_pa_lkp_category> toCacheModel() {
		iucn_pa_lkp_categoryCacheModel iucn_pa_lkp_categoryCacheModel = new iucn_pa_lkp_categoryCacheModel();

		iucn_pa_lkp_categoryCacheModel.iucn_pa_category_id = getIucn_pa_category_id();

		iucn_pa_lkp_categoryCacheModel.category = getCategory();

		String category = iucn_pa_lkp_categoryCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			iucn_pa_lkp_categoryCacheModel.category = null;
		}

		return iucn_pa_lkp_categoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{iucn_pa_category_id=");
		sb.append(getIucn_pa_category_id());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.iucn_pa_lkp_category");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>iucn_pa_category_id</column-name><column-value><![CDATA[");
		sb.append(getIucn_pa_category_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = iucn_pa_lkp_category.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			iucn_pa_lkp_category.class
		};
	private int _iucn_pa_category_id;
	private String _category;
	private iucn_pa_lkp_category _escapedModelProxy;
}