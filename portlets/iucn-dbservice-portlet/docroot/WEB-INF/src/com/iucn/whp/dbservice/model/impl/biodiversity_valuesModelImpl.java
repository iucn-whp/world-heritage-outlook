/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.biodiversity_values;
import com.iucn.whp.dbservice.model.biodiversity_valuesModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the biodiversity_values service. Represents a row in the &quot;whp_biodiversity_values&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.biodiversity_valuesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link biodiversity_valuesImpl}.
 * </p>
 *
 * @author alok.sen
 * @see biodiversity_valuesImpl
 * @see com.iucn.whp.dbservice.model.biodiversity_values
 * @see com.iucn.whp.dbservice.model.biodiversity_valuesModel
 * @generated
 */
public class biodiversity_valuesModelImpl extends BaseModelImpl<biodiversity_values>
	implements biodiversity_valuesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a biodiversity_values model instance should use the {@link com.iucn.whp.dbservice.model.biodiversity_values} interface instead.
	 */
	public static final String TABLE_NAME = "whp_biodiversity_values";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "vn", Types.BIGINT },
			{ "assessment_version_id", Types.BIGINT },
			{ "value", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_biodiversity_values (id_ LONG not null primary key,vn LONG,assessment_version_id LONG,value VARCHAR(200) null,description STRING null)";
	public static final String TABLE_SQL_DROP = "drop table whp_biodiversity_values";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.biodiversity_values"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.biodiversity_values"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.biodiversity_values"),
			true);
	public static long ASSESSMENT_VERSION_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.biodiversity_values"));

	public biodiversity_valuesModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return biodiversity_values.class;
	}

	public String getModelClassName() {
		return biodiversity_values.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("vn", getVn());
		attributes.put("assessment_version_id", getAssessment_version_id());
		attributes.put("value", getValue());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long vn = (Long)attributes.get("vn");

		if (vn != null) {
			setVn(vn);
		}

		Long assessment_version_id = (Long)attributes.get(
				"assessment_version_id");

		if (assessment_version_id != null) {
			setAssessment_version_id(assessment_version_id);
		}

		String value = (String)attributes.get("value");

		if (value != null) {
			setValue(value);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getVn() {
		return _vn;
	}

	public void setVn(long vn) {
		_vn = vn;
	}

	public long getAssessment_version_id() {
		return _assessment_version_id;
	}

	public void setAssessment_version_id(long assessment_version_id) {
		_columnBitmask |= ASSESSMENT_VERSION_ID_COLUMN_BITMASK;

		if (!_setOriginalAssessment_version_id) {
			_setOriginalAssessment_version_id = true;

			_originalAssessment_version_id = _assessment_version_id;
		}

		_assessment_version_id = assessment_version_id;
	}

	public long getOriginalAssessment_version_id() {
		return _originalAssessment_version_id;
	}

	public String getValue() {
		if (_value == null) {
			return StringPool.BLANK;
		}
		else {
			return _value;
		}
	}

	public void setValue(String value) {
		_value = value;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			biodiversity_values.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public biodiversity_values toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (biodiversity_values)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		biodiversity_valuesImpl biodiversity_valuesImpl = new biodiversity_valuesImpl();

		biodiversity_valuesImpl.setId(getId());
		biodiversity_valuesImpl.setVn(getVn());
		biodiversity_valuesImpl.setAssessment_version_id(getAssessment_version_id());
		biodiversity_valuesImpl.setValue(getValue());
		biodiversity_valuesImpl.setDescription(getDescription());

		biodiversity_valuesImpl.resetOriginalValues();

		return biodiversity_valuesImpl;
	}

	public int compareTo(biodiversity_values biodiversity_values) {
		long primaryKey = biodiversity_values.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		biodiversity_values biodiversity_values = null;

		try {
			biodiversity_values = (biodiversity_values)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = biodiversity_values.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		biodiversity_valuesModelImpl biodiversity_valuesModelImpl = this;

		biodiversity_valuesModelImpl._originalAssessment_version_id = biodiversity_valuesModelImpl._assessment_version_id;

		biodiversity_valuesModelImpl._setOriginalAssessment_version_id = false;

		biodiversity_valuesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<biodiversity_values> toCacheModel() {
		biodiversity_valuesCacheModel biodiversity_valuesCacheModel = new biodiversity_valuesCacheModel();

		biodiversity_valuesCacheModel.id = getId();

		biodiversity_valuesCacheModel.vn = getVn();

		biodiversity_valuesCacheModel.assessment_version_id = getAssessment_version_id();

		biodiversity_valuesCacheModel.value = getValue();

		String value = biodiversity_valuesCacheModel.value;

		if ((value != null) && (value.length() == 0)) {
			biodiversity_valuesCacheModel.value = null;
		}

		biodiversity_valuesCacheModel.description = getDescription();

		String description = biodiversity_valuesCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			biodiversity_valuesCacheModel.description = null;
		}

		return biodiversity_valuesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", vn=");
		sb.append(getVn());
		sb.append(", assessment_version_id=");
		sb.append(getAssessment_version_id());
		sb.append(", value=");
		sb.append(getValue());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.biodiversity_values");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vn</column-name><column-value><![CDATA[");
		sb.append(getVn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessment_version_id</column-name><column-value><![CDATA[");
		sb.append(getAssessment_version_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>value</column-name><column-value><![CDATA[");
		sb.append(getValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = biodiversity_values.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			biodiversity_values.class
		};
	private long _id;
	private long _vn;
	private long _assessment_version_id;
	private long _originalAssessment_version_id;
	private boolean _setOriginalAssessment_version_id;
	private String _value;
	private String _description;
	private long _columnBitmask;
	private biodiversity_values _escapedModelProxy;
}