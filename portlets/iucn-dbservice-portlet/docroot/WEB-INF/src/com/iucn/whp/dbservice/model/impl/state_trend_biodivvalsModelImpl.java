/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.state_trend_biodivvals;
import com.iucn.whp.dbservice.model.state_trend_biodivvalsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the state_trend_biodivvals service. Represents a row in the &quot;whp_state_trend_biodivvals&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.state_trend_biodivvalsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link state_trend_biodivvalsImpl}.
 * </p>
 *
 * @author alok.sen
 * @see state_trend_biodivvalsImpl
 * @see com.iucn.whp.dbservice.model.state_trend_biodivvals
 * @see com.iucn.whp.dbservice.model.state_trend_biodivvalsModel
 * @generated
 */
public class state_trend_biodivvalsModelImpl extends BaseModelImpl<state_trend_biodivvals>
	implements state_trend_biodivvalsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a state_trend_biodivvals model instance should use the {@link com.iucn.whp.dbservice.model.state_trend_biodivvals} interface instead.
	 */
	public static final String TABLE_NAME = "whp_state_trend_biodivvals";
	public static final Object[][] TABLE_COLUMNS = {
			{ "state_trend_biodivvals_id", Types.BIGINT },
			{ "assessment_version_id", Types.BIGINT },
			{ "justification", Types.VARCHAR },
			{ "state_id", Types.BIGINT },
			{ "trend_id", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_state_trend_biodivvals (state_trend_biodivvals_id LONG not null primary key,assessment_version_id LONG,justification STRING null,state_id LONG,trend_id LONG)";
	public static final String TABLE_SQL_DROP = "drop table whp_state_trend_biodivvals";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.state_trend_biodivvals"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.state_trend_biodivvals"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.state_trend_biodivvals"),
			true);
	public static long ASSESSMENT_VERSION_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.state_trend_biodivvals"));

	public state_trend_biodivvalsModelImpl() {
	}

	public long getPrimaryKey() {
		return _state_trend_biodivvals_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setState_trend_biodivvals_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_state_trend_biodivvals_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return state_trend_biodivvals.class;
	}

	public String getModelClassName() {
		return state_trend_biodivvals.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("state_trend_biodivvals_id",
			getState_trend_biodivvals_id());
		attributes.put("assessment_version_id", getAssessment_version_id());
		attributes.put("justification", getJustification());
		attributes.put("state_id", getState_id());
		attributes.put("trend_id", getTrend_id());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long state_trend_biodivvals_id = (Long)attributes.get(
				"state_trend_biodivvals_id");

		if (state_trend_biodivvals_id != null) {
			setState_trend_biodivvals_id(state_trend_biodivvals_id);
		}

		Long assessment_version_id = (Long)attributes.get(
				"assessment_version_id");

		if (assessment_version_id != null) {
			setAssessment_version_id(assessment_version_id);
		}

		String justification = (String)attributes.get("justification");

		if (justification != null) {
			setJustification(justification);
		}

		Long state_id = (Long)attributes.get("state_id");

		if (state_id != null) {
			setState_id(state_id);
		}

		Long trend_id = (Long)attributes.get("trend_id");

		if (trend_id != null) {
			setTrend_id(trend_id);
		}
	}

	public long getState_trend_biodivvals_id() {
		return _state_trend_biodivvals_id;
	}

	public void setState_trend_biodivvals_id(long state_trend_biodivvals_id) {
		_state_trend_biodivvals_id = state_trend_biodivvals_id;
	}

	public long getAssessment_version_id() {
		return _assessment_version_id;
	}

	public void setAssessment_version_id(long assessment_version_id) {
		_columnBitmask |= ASSESSMENT_VERSION_ID_COLUMN_BITMASK;

		if (!_setOriginalAssessment_version_id) {
			_setOriginalAssessment_version_id = true;

			_originalAssessment_version_id = _assessment_version_id;
		}

		_assessment_version_id = assessment_version_id;
	}

	public long getOriginalAssessment_version_id() {
		return _originalAssessment_version_id;
	}

	public String getJustification() {
		if (_justification == null) {
			return StringPool.BLANK;
		}
		else {
			return _justification;
		}
	}

	public void setJustification(String justification) {
		_justification = justification;
	}

	public long getState_id() {
		return _state_id;
	}

	public void setState_id(long state_id) {
		_state_id = state_id;
	}

	public long getTrend_id() {
		return _trend_id;
	}

	public void setTrend_id(long trend_id) {
		_trend_id = trend_id;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			state_trend_biodivvals.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public state_trend_biodivvals toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (state_trend_biodivvals)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		state_trend_biodivvalsImpl state_trend_biodivvalsImpl = new state_trend_biodivvalsImpl();

		state_trend_biodivvalsImpl.setState_trend_biodivvals_id(getState_trend_biodivvals_id());
		state_trend_biodivvalsImpl.setAssessment_version_id(getAssessment_version_id());
		state_trend_biodivvalsImpl.setJustification(getJustification());
		state_trend_biodivvalsImpl.setState_id(getState_id());
		state_trend_biodivvalsImpl.setTrend_id(getTrend_id());

		state_trend_biodivvalsImpl.resetOriginalValues();

		return state_trend_biodivvalsImpl;
	}

	public int compareTo(state_trend_biodivvals state_trend_biodivvals) {
		long primaryKey = state_trend_biodivvals.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		state_trend_biodivvals state_trend_biodivvals = null;

		try {
			state_trend_biodivvals = (state_trend_biodivvals)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = state_trend_biodivvals.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		state_trend_biodivvalsModelImpl state_trend_biodivvalsModelImpl = this;

		state_trend_biodivvalsModelImpl._originalAssessment_version_id = state_trend_biodivvalsModelImpl._assessment_version_id;

		state_trend_biodivvalsModelImpl._setOriginalAssessment_version_id = false;

		state_trend_biodivvalsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<state_trend_biodivvals> toCacheModel() {
		state_trend_biodivvalsCacheModel state_trend_biodivvalsCacheModel = new state_trend_biodivvalsCacheModel();

		state_trend_biodivvalsCacheModel.state_trend_biodivvals_id = getState_trend_biodivvals_id();

		state_trend_biodivvalsCacheModel.assessment_version_id = getAssessment_version_id();

		state_trend_biodivvalsCacheModel.justification = getJustification();

		String justification = state_trend_biodivvalsCacheModel.justification;

		if ((justification != null) && (justification.length() == 0)) {
			state_trend_biodivvalsCacheModel.justification = null;
		}

		state_trend_biodivvalsCacheModel.state_id = getState_id();

		state_trend_biodivvalsCacheModel.trend_id = getTrend_id();

		return state_trend_biodivvalsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{state_trend_biodivvals_id=");
		sb.append(getState_trend_biodivvals_id());
		sb.append(", assessment_version_id=");
		sb.append(getAssessment_version_id());
		sb.append(", justification=");
		sb.append(getJustification());
		sb.append(", state_id=");
		sb.append(getState_id());
		sb.append(", trend_id=");
		sb.append(getTrend_id());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.state_trend_biodivvals");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>state_trend_biodivvals_id</column-name><column-value><![CDATA[");
		sb.append(getState_trend_biodivvals_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessment_version_id</column-name><column-value><![CDATA[");
		sb.append(getAssessment_version_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>justification</column-name><column-value><![CDATA[");
		sb.append(getJustification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>state_id</column-name><column-value><![CDATA[");
		sb.append(getState_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>trend_id</column-name><column-value><![CDATA[");
		sb.append(getTrend_id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = state_trend_biodivvals.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			state_trend_biodivvals.class
		};
	private long _state_trend_biodivvals_id;
	private long _assessment_version_id;
	private long _originalAssessment_version_id;
	private boolean _setOriginalAssessment_version_id;
	private String _justification;
	private long _state_id;
	private long _trend_id;
	private long _columnBitmask;
	private state_trend_biodivvals _escapedModelProxy;
}