/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.advance_query_site;
import com.iucn.whp.dbservice.model.advance_query_siteModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the advance_query_site service. Represents a row in the &quot;whp_advance_query_site&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.advance_query_siteModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link advance_query_siteImpl}.
 * </p>
 *
 * @author alok.sen
 * @see advance_query_siteImpl
 * @see com.iucn.whp.dbservice.model.advance_query_site
 * @see com.iucn.whp.dbservice.model.advance_query_siteModel
 * @generated
 */
public class advance_query_siteModelImpl extends BaseModelImpl<advance_query_site>
	implements advance_query_siteModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a advance_query_site model instance should use the {@link com.iucn.whp.dbservice.model.advance_query_site} interface instead.
	 */
	public static final String TABLE_NAME = "whp_advance_query_site";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "base_search_val", Types.VARCHAR },
			{ "base_tab_name", Types.VARCHAR },
			{ "base_tab_pk", Types.VARCHAR },
			{ "base_tab_field_disp", Types.VARCHAR },
			{ "base_tab_field_actual", Types.VARCHAR },
			{ "relate_tab_available", Types.VARCHAR },
			{ "relate_table_name", Types.VARCHAR },
			{ "relate_tab_fk", Types.VARCHAR },
			{ "has_lookup", Types.VARCHAR },
			{ "lookup_table_name", Types.VARCHAR },
			{ "lookup_pk", Types.VARCHAR },
			{ "lkp_display_field", Types.VARCHAR },
			{ "custom_sql", Types.VARCHAR },
			{ "isboolean", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_advance_query_site (id_ LONG not null primary key,base_search_val VARCHAR(100) null,base_tab_name VARCHAR(100) null,base_tab_pk VARCHAR(100) null,base_tab_field_disp VARCHAR(100) null,base_tab_field_actual VARCHAR(100) null,relate_tab_available VARCHAR(1) null,relate_table_name VARCHAR(100) null,relate_tab_fk VARCHAR(100) null,has_lookup VARCHAR(1) null,lookup_table_name VARCHAR(100) null,lookup_pk VARCHAR(100) null,lkp_display_field VARCHAR(100) null,custom_sql VARCHAR(500) null,isboolean VARCHAR(10) null)";
	public static final String TABLE_SQL_DROP = "drop table whp_advance_query_site";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.advance_query_site"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.advance_query_site"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.advance_query_site"),
			true);
	public static long BASE_SEARCH_VAL_COLUMN_BITMASK = 1L;
	public static long BASE_TAB_NAME_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.advance_query_site"));

	public advance_query_siteModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return advance_query_site.class;
	}

	public String getModelClassName() {
		return advance_query_site.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("base_search_val", getBase_search_val());
		attributes.put("base_tab_name", getBase_tab_name());
		attributes.put("base_tab_pk", getBase_tab_pk());
		attributes.put("base_tab_field_disp", getBase_tab_field_disp());
		attributes.put("base_tab_field_actual", getBase_tab_field_actual());
		attributes.put("relate_tab_available", getRelate_tab_available());
		attributes.put("relate_table_name", getRelate_table_name());
		attributes.put("relate_tab_fk", getRelate_tab_fk());
		attributes.put("has_lookup", getHas_lookup());
		attributes.put("lookup_table_name", getLookup_table_name());
		attributes.put("lookup_pk", getLookup_pk());
		attributes.put("lkp_display_field", getLkp_display_field());
		attributes.put("custom_sql", getCustom_sql());
		attributes.put("isboolean", getIsboolean());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String base_search_val = (String)attributes.get("base_search_val");

		if (base_search_val != null) {
			setBase_search_val(base_search_val);
		}

		String base_tab_name = (String)attributes.get("base_tab_name");

		if (base_tab_name != null) {
			setBase_tab_name(base_tab_name);
		}

		String base_tab_pk = (String)attributes.get("base_tab_pk");

		if (base_tab_pk != null) {
			setBase_tab_pk(base_tab_pk);
		}

		String base_tab_field_disp = (String)attributes.get(
				"base_tab_field_disp");

		if (base_tab_field_disp != null) {
			setBase_tab_field_disp(base_tab_field_disp);
		}

		String base_tab_field_actual = (String)attributes.get(
				"base_tab_field_actual");

		if (base_tab_field_actual != null) {
			setBase_tab_field_actual(base_tab_field_actual);
		}

		String relate_tab_available = (String)attributes.get(
				"relate_tab_available");

		if (relate_tab_available != null) {
			setRelate_tab_available(relate_tab_available);
		}

		String relate_table_name = (String)attributes.get("relate_table_name");

		if (relate_table_name != null) {
			setRelate_table_name(relate_table_name);
		}

		String relate_tab_fk = (String)attributes.get("relate_tab_fk");

		if (relate_tab_fk != null) {
			setRelate_tab_fk(relate_tab_fk);
		}

		String has_lookup = (String)attributes.get("has_lookup");

		if (has_lookup != null) {
			setHas_lookup(has_lookup);
		}

		String lookup_table_name = (String)attributes.get("lookup_table_name");

		if (lookup_table_name != null) {
			setLookup_table_name(lookup_table_name);
		}

		String lookup_pk = (String)attributes.get("lookup_pk");

		if (lookup_pk != null) {
			setLookup_pk(lookup_pk);
		}

		String lkp_display_field = (String)attributes.get("lkp_display_field");

		if (lkp_display_field != null) {
			setLkp_display_field(lkp_display_field);
		}

		String custom_sql = (String)attributes.get("custom_sql");

		if (custom_sql != null) {
			setCustom_sql(custom_sql);
		}

		String isboolean = (String)attributes.get("isboolean");

		if (isboolean != null) {
			setIsboolean(isboolean);
		}
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public String getBase_search_val() {
		if (_base_search_val == null) {
			return StringPool.BLANK;
		}
		else {
			return _base_search_val;
		}
	}

	public void setBase_search_val(String base_search_val) {
		_columnBitmask |= BASE_SEARCH_VAL_COLUMN_BITMASK;

		if (_originalBase_search_val == null) {
			_originalBase_search_val = _base_search_val;
		}

		_base_search_val = base_search_val;
	}

	public String getOriginalBase_search_val() {
		return GetterUtil.getString(_originalBase_search_val);
	}

	public String getBase_tab_name() {
		if (_base_tab_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _base_tab_name;
		}
	}

	public void setBase_tab_name(String base_tab_name) {
		_columnBitmask |= BASE_TAB_NAME_COLUMN_BITMASK;

		if (_originalBase_tab_name == null) {
			_originalBase_tab_name = _base_tab_name;
		}

		_base_tab_name = base_tab_name;
	}

	public String getOriginalBase_tab_name() {
		return GetterUtil.getString(_originalBase_tab_name);
	}

	public String getBase_tab_pk() {
		if (_base_tab_pk == null) {
			return StringPool.BLANK;
		}
		else {
			return _base_tab_pk;
		}
	}

	public void setBase_tab_pk(String base_tab_pk) {
		_base_tab_pk = base_tab_pk;
	}

	public String getBase_tab_field_disp() {
		if (_base_tab_field_disp == null) {
			return StringPool.BLANK;
		}
		else {
			return _base_tab_field_disp;
		}
	}

	public void setBase_tab_field_disp(String base_tab_field_disp) {
		_base_tab_field_disp = base_tab_field_disp;
	}

	public String getBase_tab_field_actual() {
		if (_base_tab_field_actual == null) {
			return StringPool.BLANK;
		}
		else {
			return _base_tab_field_actual;
		}
	}

	public void setBase_tab_field_actual(String base_tab_field_actual) {
		_base_tab_field_actual = base_tab_field_actual;
	}

	public String getRelate_tab_available() {
		if (_relate_tab_available == null) {
			return StringPool.BLANK;
		}
		else {
			return _relate_tab_available;
		}
	}

	public void setRelate_tab_available(String relate_tab_available) {
		_relate_tab_available = relate_tab_available;
	}

	public String getRelate_table_name() {
		if (_relate_table_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _relate_table_name;
		}
	}

	public void setRelate_table_name(String relate_table_name) {
		_relate_table_name = relate_table_name;
	}

	public String getRelate_tab_fk() {
		if (_relate_tab_fk == null) {
			return StringPool.BLANK;
		}
		else {
			return _relate_tab_fk;
		}
	}

	public void setRelate_tab_fk(String relate_tab_fk) {
		_relate_tab_fk = relate_tab_fk;
	}

	public String getHas_lookup() {
		if (_has_lookup == null) {
			return StringPool.BLANK;
		}
		else {
			return _has_lookup;
		}
	}

	public void setHas_lookup(String has_lookup) {
		_has_lookup = has_lookup;
	}

	public String getLookup_table_name() {
		if (_lookup_table_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _lookup_table_name;
		}
	}

	public void setLookup_table_name(String lookup_table_name) {
		_lookup_table_name = lookup_table_name;
	}

	public String getLookup_pk() {
		if (_lookup_pk == null) {
			return StringPool.BLANK;
		}
		else {
			return _lookup_pk;
		}
	}

	public void setLookup_pk(String lookup_pk) {
		_lookup_pk = lookup_pk;
	}

	public String getLkp_display_field() {
		if (_lkp_display_field == null) {
			return StringPool.BLANK;
		}
		else {
			return _lkp_display_field;
		}
	}

	public void setLkp_display_field(String lkp_display_field) {
		_lkp_display_field = lkp_display_field;
	}

	public String getCustom_sql() {
		if (_custom_sql == null) {
			return StringPool.BLANK;
		}
		else {
			return _custom_sql;
		}
	}

	public void setCustom_sql(String custom_sql) {
		_custom_sql = custom_sql;
	}

	public String getIsboolean() {
		if (_isboolean == null) {
			return StringPool.BLANK;
		}
		else {
			return _isboolean;
		}
	}

	public void setIsboolean(String isboolean) {
		_isboolean = isboolean;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			advance_query_site.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public advance_query_site toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (advance_query_site)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		advance_query_siteImpl advance_query_siteImpl = new advance_query_siteImpl();

		advance_query_siteImpl.setId(getId());
		advance_query_siteImpl.setBase_search_val(getBase_search_val());
		advance_query_siteImpl.setBase_tab_name(getBase_tab_name());
		advance_query_siteImpl.setBase_tab_pk(getBase_tab_pk());
		advance_query_siteImpl.setBase_tab_field_disp(getBase_tab_field_disp());
		advance_query_siteImpl.setBase_tab_field_actual(getBase_tab_field_actual());
		advance_query_siteImpl.setRelate_tab_available(getRelate_tab_available());
		advance_query_siteImpl.setRelate_table_name(getRelate_table_name());
		advance_query_siteImpl.setRelate_tab_fk(getRelate_tab_fk());
		advance_query_siteImpl.setHas_lookup(getHas_lookup());
		advance_query_siteImpl.setLookup_table_name(getLookup_table_name());
		advance_query_siteImpl.setLookup_pk(getLookup_pk());
		advance_query_siteImpl.setLkp_display_field(getLkp_display_field());
		advance_query_siteImpl.setCustom_sql(getCustom_sql());
		advance_query_siteImpl.setIsboolean(getIsboolean());

		advance_query_siteImpl.resetOriginalValues();

		return advance_query_siteImpl;
	}

	public int compareTo(advance_query_site advance_query_site) {
		long primaryKey = advance_query_site.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		advance_query_site advance_query_site = null;

		try {
			advance_query_site = (advance_query_site)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = advance_query_site.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		advance_query_siteModelImpl advance_query_siteModelImpl = this;

		advance_query_siteModelImpl._originalBase_search_val = advance_query_siteModelImpl._base_search_val;

		advance_query_siteModelImpl._originalBase_tab_name = advance_query_siteModelImpl._base_tab_name;

		advance_query_siteModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<advance_query_site> toCacheModel() {
		advance_query_siteCacheModel advance_query_siteCacheModel = new advance_query_siteCacheModel();

		advance_query_siteCacheModel.id = getId();

		advance_query_siteCacheModel.base_search_val = getBase_search_val();

		String base_search_val = advance_query_siteCacheModel.base_search_val;

		if ((base_search_val != null) && (base_search_val.length() == 0)) {
			advance_query_siteCacheModel.base_search_val = null;
		}

		advance_query_siteCacheModel.base_tab_name = getBase_tab_name();

		String base_tab_name = advance_query_siteCacheModel.base_tab_name;

		if ((base_tab_name != null) && (base_tab_name.length() == 0)) {
			advance_query_siteCacheModel.base_tab_name = null;
		}

		advance_query_siteCacheModel.base_tab_pk = getBase_tab_pk();

		String base_tab_pk = advance_query_siteCacheModel.base_tab_pk;

		if ((base_tab_pk != null) && (base_tab_pk.length() == 0)) {
			advance_query_siteCacheModel.base_tab_pk = null;
		}

		advance_query_siteCacheModel.base_tab_field_disp = getBase_tab_field_disp();

		String base_tab_field_disp = advance_query_siteCacheModel.base_tab_field_disp;

		if ((base_tab_field_disp != null) &&
				(base_tab_field_disp.length() == 0)) {
			advance_query_siteCacheModel.base_tab_field_disp = null;
		}

		advance_query_siteCacheModel.base_tab_field_actual = getBase_tab_field_actual();

		String base_tab_field_actual = advance_query_siteCacheModel.base_tab_field_actual;

		if ((base_tab_field_actual != null) &&
				(base_tab_field_actual.length() == 0)) {
			advance_query_siteCacheModel.base_tab_field_actual = null;
		}

		advance_query_siteCacheModel.relate_tab_available = getRelate_tab_available();

		String relate_tab_available = advance_query_siteCacheModel.relate_tab_available;

		if ((relate_tab_available != null) &&
				(relate_tab_available.length() == 0)) {
			advance_query_siteCacheModel.relate_tab_available = null;
		}

		advance_query_siteCacheModel.relate_table_name = getRelate_table_name();

		String relate_table_name = advance_query_siteCacheModel.relate_table_name;

		if ((relate_table_name != null) && (relate_table_name.length() == 0)) {
			advance_query_siteCacheModel.relate_table_name = null;
		}

		advance_query_siteCacheModel.relate_tab_fk = getRelate_tab_fk();

		String relate_tab_fk = advance_query_siteCacheModel.relate_tab_fk;

		if ((relate_tab_fk != null) && (relate_tab_fk.length() == 0)) {
			advance_query_siteCacheModel.relate_tab_fk = null;
		}

		advance_query_siteCacheModel.has_lookup = getHas_lookup();

		String has_lookup = advance_query_siteCacheModel.has_lookup;

		if ((has_lookup != null) && (has_lookup.length() == 0)) {
			advance_query_siteCacheModel.has_lookup = null;
		}

		advance_query_siteCacheModel.lookup_table_name = getLookup_table_name();

		String lookup_table_name = advance_query_siteCacheModel.lookup_table_name;

		if ((lookup_table_name != null) && (lookup_table_name.length() == 0)) {
			advance_query_siteCacheModel.lookup_table_name = null;
		}

		advance_query_siteCacheModel.lookup_pk = getLookup_pk();

		String lookup_pk = advance_query_siteCacheModel.lookup_pk;

		if ((lookup_pk != null) && (lookup_pk.length() == 0)) {
			advance_query_siteCacheModel.lookup_pk = null;
		}

		advance_query_siteCacheModel.lkp_display_field = getLkp_display_field();

		String lkp_display_field = advance_query_siteCacheModel.lkp_display_field;

		if ((lkp_display_field != null) && (lkp_display_field.length() == 0)) {
			advance_query_siteCacheModel.lkp_display_field = null;
		}

		advance_query_siteCacheModel.custom_sql = getCustom_sql();

		String custom_sql = advance_query_siteCacheModel.custom_sql;

		if ((custom_sql != null) && (custom_sql.length() == 0)) {
			advance_query_siteCacheModel.custom_sql = null;
		}

		advance_query_siteCacheModel.isboolean = getIsboolean();

		String isboolean = advance_query_siteCacheModel.isboolean;

		if ((isboolean != null) && (isboolean.length() == 0)) {
			advance_query_siteCacheModel.isboolean = null;
		}

		return advance_query_siteCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", base_search_val=");
		sb.append(getBase_search_val());
		sb.append(", base_tab_name=");
		sb.append(getBase_tab_name());
		sb.append(", base_tab_pk=");
		sb.append(getBase_tab_pk());
		sb.append(", base_tab_field_disp=");
		sb.append(getBase_tab_field_disp());
		sb.append(", base_tab_field_actual=");
		sb.append(getBase_tab_field_actual());
		sb.append(", relate_tab_available=");
		sb.append(getRelate_tab_available());
		sb.append(", relate_table_name=");
		sb.append(getRelate_table_name());
		sb.append(", relate_tab_fk=");
		sb.append(getRelate_tab_fk());
		sb.append(", has_lookup=");
		sb.append(getHas_lookup());
		sb.append(", lookup_table_name=");
		sb.append(getLookup_table_name());
		sb.append(", lookup_pk=");
		sb.append(getLookup_pk());
		sb.append(", lkp_display_field=");
		sb.append(getLkp_display_field());
		sb.append(", custom_sql=");
		sb.append(getCustom_sql());
		sb.append(", isboolean=");
		sb.append(getIsboolean());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.advance_query_site");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_search_val</column-name><column-value><![CDATA[");
		sb.append(getBase_search_val());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_tab_name</column-name><column-value><![CDATA[");
		sb.append(getBase_tab_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_tab_pk</column-name><column-value><![CDATA[");
		sb.append(getBase_tab_pk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_tab_field_disp</column-name><column-value><![CDATA[");
		sb.append(getBase_tab_field_disp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>base_tab_field_actual</column-name><column-value><![CDATA[");
		sb.append(getBase_tab_field_actual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relate_tab_available</column-name><column-value><![CDATA[");
		sb.append(getRelate_tab_available());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relate_table_name</column-name><column-value><![CDATA[");
		sb.append(getRelate_table_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>relate_tab_fk</column-name><column-value><![CDATA[");
		sb.append(getRelate_tab_fk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>has_lookup</column-name><column-value><![CDATA[");
		sb.append(getHas_lookup());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lookup_table_name</column-name><column-value><![CDATA[");
		sb.append(getLookup_table_name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lookup_pk</column-name><column-value><![CDATA[");
		sb.append(getLookup_pk());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lkp_display_field</column-name><column-value><![CDATA[");
		sb.append(getLkp_display_field());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>custom_sql</column-name><column-value><![CDATA[");
		sb.append(getCustom_sql());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isboolean</column-name><column-value><![CDATA[");
		sb.append(getIsboolean());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = advance_query_site.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			advance_query_site.class
		};
	private long _id;
	private String _base_search_val;
	private String _originalBase_search_val;
	private String _base_tab_name;
	private String _originalBase_tab_name;
	private String _base_tab_pk;
	private String _base_tab_field_disp;
	private String _base_tab_field_actual;
	private String _relate_tab_available;
	private String _relate_table_name;
	private String _relate_tab_fk;
	private String _has_lookup;
	private String _lookup_table_name;
	private String _lookup_pk;
	private String _lkp_display_field;
	private String _custom_sql;
	private String _isboolean;
	private long _columnBitmask;
	private advance_query_site _escapedModelProxy;
}