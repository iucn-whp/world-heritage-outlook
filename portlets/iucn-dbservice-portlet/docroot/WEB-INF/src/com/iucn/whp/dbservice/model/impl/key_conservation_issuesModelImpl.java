/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.key_conservation_issues;
import com.iucn.whp.dbservice.model.key_conservation_issuesModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the key_conservation_issues service. Represents a row in the &quot;whp_key_conservation_issues&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.key_conservation_issuesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link key_conservation_issuesImpl}.
 * </p>
 *
 * @author alok.sen
 * @see key_conservation_issuesImpl
 * @see com.iucn.whp.dbservice.model.key_conservation_issues
 * @see com.iucn.whp.dbservice.model.key_conservation_issuesModel
 * @generated
 */
public class key_conservation_issuesModelImpl extends BaseModelImpl<key_conservation_issues>
	implements key_conservation_issuesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a key_conservation_issues model instance should use the {@link com.iucn.whp.dbservice.model.key_conservation_issues} interface instead.
	 */
	public static final String TABLE_NAME = "whp_key_conservation_issues";
	public static final Object[][] TABLE_COLUMNS = {
			{ "key_conservation_issues_id", Types.BIGINT },
			{ "assessment_version_id", Types.BIGINT },
			{ "cn", Types.VARCHAR },
			{ "key_conservation_issues", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "scale", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_key_conservation_issues (key_conservation_issues_id LONG not null primary key,assessment_version_id LONG,cn VARCHAR(75) null,key_conservation_issues VARCHAR(200) null,description STRING null,scale LONG)";
	public static final String TABLE_SQL_DROP = "drop table whp_key_conservation_issues";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.key_conservation_issues"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.key_conservation_issues"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.key_conservation_issues"),
			true);
	public static long ASSESSMENT_VERSION_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.key_conservation_issues"));

	public key_conservation_issuesModelImpl() {
	}

	public long getPrimaryKey() {
		return _key_conservation_issues_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setKey_conservation_issues_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_key_conservation_issues_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return key_conservation_issues.class;
	}

	public String getModelClassName() {
		return key_conservation_issues.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("key_conservation_issues_id",
			getKey_conservation_issues_id());
		attributes.put("assessment_version_id", getAssessment_version_id());
		attributes.put("cn", getCn());
		attributes.put("key_conservation_issues", getKey_conservation_issues());
		attributes.put("description", getDescription());
		attributes.put("scale", getScale());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long key_conservation_issues_id = (Long)attributes.get(
				"key_conservation_issues_id");

		if (key_conservation_issues_id != null) {
			setKey_conservation_issues_id(key_conservation_issues_id);
		}

		Long assessment_version_id = (Long)attributes.get(
				"assessment_version_id");

		if (assessment_version_id != null) {
			setAssessment_version_id(assessment_version_id);
		}

		String cn = (String)attributes.get("cn");

		if (cn != null) {
			setCn(cn);
		}

		String key_conservation_issues = (String)attributes.get(
				"key_conservation_issues");

		if (key_conservation_issues != null) {
			setKey_conservation_issues(key_conservation_issues);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long scale = (Long)attributes.get("scale");

		if (scale != null) {
			setScale(scale);
		}
	}

	public long getKey_conservation_issues_id() {
		return _key_conservation_issues_id;
	}

	public void setKey_conservation_issues_id(long key_conservation_issues_id) {
		_key_conservation_issues_id = key_conservation_issues_id;
	}

	public long getAssessment_version_id() {
		return _assessment_version_id;
	}

	public void setAssessment_version_id(long assessment_version_id) {
		_columnBitmask |= ASSESSMENT_VERSION_ID_COLUMN_BITMASK;

		if (!_setOriginalAssessment_version_id) {
			_setOriginalAssessment_version_id = true;

			_originalAssessment_version_id = _assessment_version_id;
		}

		_assessment_version_id = assessment_version_id;
	}

	public long getOriginalAssessment_version_id() {
		return _originalAssessment_version_id;
	}

	public String getCn() {
		if (_cn == null) {
			return StringPool.BLANK;
		}
		else {
			return _cn;
		}
	}

	public void setCn(String cn) {
		_cn = cn;
	}

	public String getKey_conservation_issues() {
		if (_key_conservation_issues == null) {
			return StringPool.BLANK;
		}
		else {
			return _key_conservation_issues;
		}
	}

	public void setKey_conservation_issues(String key_conservation_issues) {
		_key_conservation_issues = key_conservation_issues;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getScale() {
		return _scale;
	}

	public void setScale(long scale) {
		_scale = scale;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			key_conservation_issues.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public key_conservation_issues toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (key_conservation_issues)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		key_conservation_issuesImpl key_conservation_issuesImpl = new key_conservation_issuesImpl();

		key_conservation_issuesImpl.setKey_conservation_issues_id(getKey_conservation_issues_id());
		key_conservation_issuesImpl.setAssessment_version_id(getAssessment_version_id());
		key_conservation_issuesImpl.setCn(getCn());
		key_conservation_issuesImpl.setKey_conservation_issues(getKey_conservation_issues());
		key_conservation_issuesImpl.setDescription(getDescription());
		key_conservation_issuesImpl.setScale(getScale());

		key_conservation_issuesImpl.resetOriginalValues();

		return key_conservation_issuesImpl;
	}

	public int compareTo(key_conservation_issues key_conservation_issues) {
		long primaryKey = key_conservation_issues.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		key_conservation_issues key_conservation_issues = null;

		try {
			key_conservation_issues = (key_conservation_issues)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = key_conservation_issues.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		key_conservation_issuesModelImpl key_conservation_issuesModelImpl = this;

		key_conservation_issuesModelImpl._originalAssessment_version_id = key_conservation_issuesModelImpl._assessment_version_id;

		key_conservation_issuesModelImpl._setOriginalAssessment_version_id = false;

		key_conservation_issuesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<key_conservation_issues> toCacheModel() {
		key_conservation_issuesCacheModel key_conservation_issuesCacheModel = new key_conservation_issuesCacheModel();

		key_conservation_issuesCacheModel.key_conservation_issues_id = getKey_conservation_issues_id();

		key_conservation_issuesCacheModel.assessment_version_id = getAssessment_version_id();

		key_conservation_issuesCacheModel.cn = getCn();

		String cn = key_conservation_issuesCacheModel.cn;

		if ((cn != null) && (cn.length() == 0)) {
			key_conservation_issuesCacheModel.cn = null;
		}

		key_conservation_issuesCacheModel.key_conservation_issues = getKey_conservation_issues();

		String key_conservation_issues = key_conservation_issuesCacheModel.key_conservation_issues;

		if ((key_conservation_issues != null) &&
				(key_conservation_issues.length() == 0)) {
			key_conservation_issuesCacheModel.key_conservation_issues = null;
		}

		key_conservation_issuesCacheModel.description = getDescription();

		String description = key_conservation_issuesCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			key_conservation_issuesCacheModel.description = null;
		}

		key_conservation_issuesCacheModel.scale = getScale();

		return key_conservation_issuesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{key_conservation_issues_id=");
		sb.append(getKey_conservation_issues_id());
		sb.append(", assessment_version_id=");
		sb.append(getAssessment_version_id());
		sb.append(", cn=");
		sb.append(getCn());
		sb.append(", key_conservation_issues=");
		sb.append(getKey_conservation_issues());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", scale=");
		sb.append(getScale());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.key_conservation_issues");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>key_conservation_issues_id</column-name><column-value><![CDATA[");
		sb.append(getKey_conservation_issues_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assessment_version_id</column-name><column-value><![CDATA[");
		sb.append(getAssessment_version_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cn</column-name><column-value><![CDATA[");
		sb.append(getCn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>key_conservation_issues</column-name><column-value><![CDATA[");
		sb.append(getKey_conservation_issues());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scale</column-name><column-value><![CDATA[");
		sb.append(getScale());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = key_conservation_issues.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			key_conservation_issues.class
		};
	private long _key_conservation_issues_id;
	private long _assessment_version_id;
	private long _originalAssessment_version_id;
	private boolean _setOriginalAssessment_version_id;
	private String _cn;
	private String _key_conservation_issues;
	private String _description;
	private long _scale;
	private long _columnBitmask;
	private key_conservation_issues _escapedModelProxy;
}