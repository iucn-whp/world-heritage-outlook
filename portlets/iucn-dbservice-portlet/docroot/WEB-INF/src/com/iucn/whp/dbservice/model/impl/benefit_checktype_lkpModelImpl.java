/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.benefit_checktype_lkp;
import com.iucn.whp.dbservice.model.benefit_checktype_lkpModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the benefit_checktype_lkp service. Represents a row in the &quot;whp_benefit_checktype_lkp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.benefit_checktype_lkpModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link benefit_checktype_lkpImpl}.
 * </p>
 *
 * @author alok.sen
 * @see benefit_checktype_lkpImpl
 * @see com.iucn.whp.dbservice.model.benefit_checktype_lkp
 * @see com.iucn.whp.dbservice.model.benefit_checktype_lkpModel
 * @generated
 */
public class benefit_checktype_lkpModelImpl extends BaseModelImpl<benefit_checktype_lkp>
	implements benefit_checktype_lkpModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a benefit_checktype_lkp model instance should use the {@link com.iucn.whp.dbservice.model.benefit_checktype_lkp} interface instead.
	 */
	public static final String TABLE_NAME = "whp_benefit_checktype_lkp";
	public static final Object[][] TABLE_COLUMNS = {
			{ "benefit_id", Types.BIGINT },
			{ "benefit_checktype", Types.VARCHAR },
			{ "active_", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_benefit_checktype_lkp (benefit_id LONG not null primary key,benefit_checktype VARCHAR(50) null,active_ BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table whp_benefit_checktype_lkp";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.benefit_checktype_lkp"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.benefit_checktype_lkp"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.benefit_checktype_lkp"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.benefit_checktype_lkp"));

	public benefit_checktype_lkpModelImpl() {
	}

	public long getPrimaryKey() {
		return _benefit_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setBenefit_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_benefit_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return benefit_checktype_lkp.class;
	}

	public String getModelClassName() {
		return benefit_checktype_lkp.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("benefit_id", getBenefit_id());
		attributes.put("benefit_checktype", getBenefit_checktype());
		attributes.put("active", getActive());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long benefit_id = (Long)attributes.get("benefit_id");

		if (benefit_id != null) {
			setBenefit_id(benefit_id);
		}

		String benefit_checktype = (String)attributes.get("benefit_checktype");

		if (benefit_checktype != null) {
			setBenefit_checktype(benefit_checktype);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}
	}

	public long getBenefit_id() {
		return _benefit_id;
	}

	public void setBenefit_id(long benefit_id) {
		_benefit_id = benefit_id;
	}

	public String getBenefit_checktype() {
		if (_benefit_checktype == null) {
			return StringPool.BLANK;
		}
		else {
			return _benefit_checktype;
		}
	}

	public void setBenefit_checktype(String benefit_checktype) {
		_benefit_checktype = benefit_checktype;
	}

	public boolean getActive() {
		return _active;
	}

	public boolean isActive() {
		return _active;
	}

	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			benefit_checktype_lkp.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public benefit_checktype_lkp toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (benefit_checktype_lkp)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		benefit_checktype_lkpImpl benefit_checktype_lkpImpl = new benefit_checktype_lkpImpl();

		benefit_checktype_lkpImpl.setBenefit_id(getBenefit_id());
		benefit_checktype_lkpImpl.setBenefit_checktype(getBenefit_checktype());
		benefit_checktype_lkpImpl.setActive(getActive());

		benefit_checktype_lkpImpl.resetOriginalValues();

		return benefit_checktype_lkpImpl;
	}

	public int compareTo(benefit_checktype_lkp benefit_checktype_lkp) {
		long primaryKey = benefit_checktype_lkp.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		benefit_checktype_lkp benefit_checktype_lkp = null;

		try {
			benefit_checktype_lkp = (benefit_checktype_lkp)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = benefit_checktype_lkp.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		benefit_checktype_lkpModelImpl benefit_checktype_lkpModelImpl = this;

		benefit_checktype_lkpModelImpl._originalActive = benefit_checktype_lkpModelImpl._active;

		benefit_checktype_lkpModelImpl._setOriginalActive = false;

		benefit_checktype_lkpModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<benefit_checktype_lkp> toCacheModel() {
		benefit_checktype_lkpCacheModel benefit_checktype_lkpCacheModel = new benefit_checktype_lkpCacheModel();

		benefit_checktype_lkpCacheModel.benefit_id = getBenefit_id();

		benefit_checktype_lkpCacheModel.benefit_checktype = getBenefit_checktype();

		String benefit_checktype = benefit_checktype_lkpCacheModel.benefit_checktype;

		if ((benefit_checktype != null) && (benefit_checktype.length() == 0)) {
			benefit_checktype_lkpCacheModel.benefit_checktype = null;
		}

		benefit_checktype_lkpCacheModel.active = getActive();

		return benefit_checktype_lkpCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{benefit_id=");
		sb.append(getBenefit_id());
		sb.append(", benefit_checktype=");
		sb.append(getBenefit_checktype());
		sb.append(", active=");
		sb.append(getActive());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.benefit_checktype_lkp");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>benefit_id</column-name><column-value><![CDATA[");
		sb.append(getBenefit_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>benefit_checktype</column-name><column-value><![CDATA[");
		sb.append(getBenefit_checktype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = benefit_checktype_lkp.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			benefit_checktype_lkp.class
		};
	private long _benefit_id;
	private String _benefit_checktype;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _columnBitmask;
	private benefit_checktype_lkp _escapedModelProxy;
}