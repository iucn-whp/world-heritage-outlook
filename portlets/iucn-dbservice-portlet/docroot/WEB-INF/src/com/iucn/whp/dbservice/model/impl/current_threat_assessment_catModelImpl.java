/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.current_threat_assessment_cat;
import com.iucn.whp.dbservice.model.current_threat_assessment_catModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the current_threat_assessment_cat service. Represents a row in the &quot;whp_current_threat_assessment_cat&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.current_threat_assessment_catModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link current_threat_assessment_catImpl}.
 * </p>
 *
 * @author alok.sen
 * @see current_threat_assessment_catImpl
 * @see com.iucn.whp.dbservice.model.current_threat_assessment_cat
 * @see com.iucn.whp.dbservice.model.current_threat_assessment_catModel
 * @generated
 */
public class current_threat_assessment_catModelImpl extends BaseModelImpl<current_threat_assessment_cat>
	implements current_threat_assessment_catModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a current_threat_assessment_cat model instance should use the {@link com.iucn.whp.dbservice.model.current_threat_assessment_cat} interface instead.
	 */
	public static final String TABLE_NAME = "whp_current_threat_assessment_cat";
	public static final Object[][] TABLE_COLUMNS = {
			{ "cur_threat_cat_id", Types.BIGINT },
			{ "current_threat_id", Types.BIGINT },
			{ "category_id", Types.BIGINT },
			{ "sub_cat_id", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_current_threat_assessment_cat (cur_threat_cat_id LONG not null primary key,current_threat_id LONG,category_id LONG,sub_cat_id LONG)";
	public static final String TABLE_SQL_DROP = "drop table whp_current_threat_assessment_cat";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.current_threat_assessment_cat"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.current_threat_assessment_cat"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.current_threat_assessment_cat"),
			true);
	public static long CATEGORY_ID_COLUMN_BITMASK = 1L;
	public static long CURRENT_THREAT_ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.current_threat_assessment_cat"));

	public current_threat_assessment_catModelImpl() {
	}

	public long getPrimaryKey() {
		return _cur_threat_cat_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setCur_threat_cat_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_cur_threat_cat_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return current_threat_assessment_cat.class;
	}

	public String getModelClassName() {
		return current_threat_assessment_cat.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("cur_threat_cat_id", getCur_threat_cat_id());
		attributes.put("current_threat_id", getCurrent_threat_id());
		attributes.put("category_id", getCategory_id());
		attributes.put("sub_cat_id", getSub_cat_id());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long cur_threat_cat_id = (Long)attributes.get("cur_threat_cat_id");

		if (cur_threat_cat_id != null) {
			setCur_threat_cat_id(cur_threat_cat_id);
		}

		Long current_threat_id = (Long)attributes.get("current_threat_id");

		if (current_threat_id != null) {
			setCurrent_threat_id(current_threat_id);
		}

		Long category_id = (Long)attributes.get("category_id");

		if (category_id != null) {
			setCategory_id(category_id);
		}

		Long sub_cat_id = (Long)attributes.get("sub_cat_id");

		if (sub_cat_id != null) {
			setSub_cat_id(sub_cat_id);
		}
	}

	public long getCur_threat_cat_id() {
		return _cur_threat_cat_id;
	}

	public void setCur_threat_cat_id(long cur_threat_cat_id) {
		_cur_threat_cat_id = cur_threat_cat_id;
	}

	public long getCurrent_threat_id() {
		return _current_threat_id;
	}

	public void setCurrent_threat_id(long current_threat_id) {
		_columnBitmask |= CURRENT_THREAT_ID_COLUMN_BITMASK;

		if (!_setOriginalCurrent_threat_id) {
			_setOriginalCurrent_threat_id = true;

			_originalCurrent_threat_id = _current_threat_id;
		}

		_current_threat_id = current_threat_id;
	}

	public long getOriginalCurrent_threat_id() {
		return _originalCurrent_threat_id;
	}

	public long getCategory_id() {
		return _category_id;
	}

	public void setCategory_id(long category_id) {
		_columnBitmask |= CATEGORY_ID_COLUMN_BITMASK;

		if (!_setOriginalCategory_id) {
			_setOriginalCategory_id = true;

			_originalCategory_id = _category_id;
		}

		_category_id = category_id;
	}

	public long getOriginalCategory_id() {
		return _originalCategory_id;
	}

	public long getSub_cat_id() {
		return _sub_cat_id;
	}

	public void setSub_cat_id(long sub_cat_id) {
		_sub_cat_id = sub_cat_id;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			current_threat_assessment_cat.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public current_threat_assessment_cat toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (current_threat_assessment_cat)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		current_threat_assessment_catImpl current_threat_assessment_catImpl = new current_threat_assessment_catImpl();

		current_threat_assessment_catImpl.setCur_threat_cat_id(getCur_threat_cat_id());
		current_threat_assessment_catImpl.setCurrent_threat_id(getCurrent_threat_id());
		current_threat_assessment_catImpl.setCategory_id(getCategory_id());
		current_threat_assessment_catImpl.setSub_cat_id(getSub_cat_id());

		current_threat_assessment_catImpl.resetOriginalValues();

		return current_threat_assessment_catImpl;
	}

	public int compareTo(
		current_threat_assessment_cat current_threat_assessment_cat) {
		long primaryKey = current_threat_assessment_cat.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		current_threat_assessment_cat current_threat_assessment_cat = null;

		try {
			current_threat_assessment_cat = (current_threat_assessment_cat)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = current_threat_assessment_cat.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		current_threat_assessment_catModelImpl current_threat_assessment_catModelImpl =
			this;

		current_threat_assessment_catModelImpl._originalCurrent_threat_id = current_threat_assessment_catModelImpl._current_threat_id;

		current_threat_assessment_catModelImpl._setOriginalCurrent_threat_id = false;

		current_threat_assessment_catModelImpl._originalCategory_id = current_threat_assessment_catModelImpl._category_id;

		current_threat_assessment_catModelImpl._setOriginalCategory_id = false;

		current_threat_assessment_catModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<current_threat_assessment_cat> toCacheModel() {
		current_threat_assessment_catCacheModel current_threat_assessment_catCacheModel =
			new current_threat_assessment_catCacheModel();

		current_threat_assessment_catCacheModel.cur_threat_cat_id = getCur_threat_cat_id();

		current_threat_assessment_catCacheModel.current_threat_id = getCurrent_threat_id();

		current_threat_assessment_catCacheModel.category_id = getCategory_id();

		current_threat_assessment_catCacheModel.sub_cat_id = getSub_cat_id();

		return current_threat_assessment_catCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{cur_threat_cat_id=");
		sb.append(getCur_threat_cat_id());
		sb.append(", current_threat_id=");
		sb.append(getCurrent_threat_id());
		sb.append(", category_id=");
		sb.append(getCategory_id());
		sb.append(", sub_cat_id=");
		sb.append(getSub_cat_id());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.current_threat_assessment_cat");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>cur_threat_cat_id</column-name><column-value><![CDATA[");
		sb.append(getCur_threat_cat_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>current_threat_id</column-name><column-value><![CDATA[");
		sb.append(getCurrent_threat_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category_id</column-name><column-value><![CDATA[");
		sb.append(getCategory_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sub_cat_id</column-name><column-value><![CDATA[");
		sb.append(getSub_cat_id());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = current_threat_assessment_cat.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			current_threat_assessment_cat.class
		};
	private long _cur_threat_cat_id;
	private long _current_threat_id;
	private long _originalCurrent_threat_id;
	private boolean _setOriginalCurrent_threat_id;
	private long _category_id;
	private long _originalCategory_id;
	private boolean _setOriginalCategory_id;
	private long _sub_cat_id;
	private long _columnBitmask;
	private current_threat_assessment_cat _escapedModelProxy;
}