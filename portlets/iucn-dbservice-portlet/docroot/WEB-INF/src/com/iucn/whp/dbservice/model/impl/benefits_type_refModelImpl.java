/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.benefits_type_ref;
import com.iucn.whp.dbservice.model.benefits_type_refModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the benefits_type_ref service. Represents a row in the &quot;whp_benefits_type_ref&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.benefits_type_refModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link benefits_type_refImpl}.
 * </p>
 *
 * @author alok.sen
 * @see benefits_type_refImpl
 * @see com.iucn.whp.dbservice.model.benefits_type_ref
 * @see com.iucn.whp.dbservice.model.benefits_type_refModel
 * @generated
 */
public class benefits_type_refModelImpl extends BaseModelImpl<benefits_type_ref>
	implements benefits_type_refModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a benefits_type_ref model instance should use the {@link com.iucn.whp.dbservice.model.benefits_type_ref} interface instead.
	 */
	public static final String TABLE_NAME = "whp_benefits_type_ref";
	public static final Object[][] TABLE_COLUMNS = {
			{ "benefits_type_ref_id", Types.BIGINT },
			{ "benefits_id", Types.BIGINT },
			{ "benefit_checktype", Types.BIGINT },
			{ "benefit_checksubtype", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_benefits_type_ref (benefits_type_ref_id LONG not null primary key,benefits_id LONG,benefit_checktype LONG,benefit_checksubtype LONG)";
	public static final String TABLE_SQL_DROP = "drop table whp_benefits_type_ref";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.benefits_type_ref"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.benefits_type_ref"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.benefits_type_ref"),
			true);
	public static long BENEFIT_CHECKTYPE_COLUMN_BITMASK = 1L;
	public static long BENEFITS_ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.benefits_type_ref"));

	public benefits_type_refModelImpl() {
	}

	public long getPrimaryKey() {
		return _benefits_type_ref_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setBenefits_type_ref_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_benefits_type_ref_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return benefits_type_ref.class;
	}

	public String getModelClassName() {
		return benefits_type_ref.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("benefits_type_ref_id", getBenefits_type_ref_id());
		attributes.put("benefits_id", getBenefits_id());
		attributes.put("benefit_checktype", getBenefit_checktype());
		attributes.put("benefit_checksubtype", getBenefit_checksubtype());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long benefits_type_ref_id = (Long)attributes.get("benefits_type_ref_id");

		if (benefits_type_ref_id != null) {
			setBenefits_type_ref_id(benefits_type_ref_id);
		}

		Long benefits_id = (Long)attributes.get("benefits_id");

		if (benefits_id != null) {
			setBenefits_id(benefits_id);
		}

		Long benefit_checktype = (Long)attributes.get("benefit_checktype");

		if (benefit_checktype != null) {
			setBenefit_checktype(benefit_checktype);
		}

		Long benefit_checksubtype = (Long)attributes.get("benefit_checksubtype");

		if (benefit_checksubtype != null) {
			setBenefit_checksubtype(benefit_checksubtype);
		}
	}

	public long getBenefits_type_ref_id() {
		return _benefits_type_ref_id;
	}

	public void setBenefits_type_ref_id(long benefits_type_ref_id) {
		_benefits_type_ref_id = benefits_type_ref_id;
	}

	public long getBenefits_id() {
		return _benefits_id;
	}

	public void setBenefits_id(long benefits_id) {
		_columnBitmask |= BENEFITS_ID_COLUMN_BITMASK;

		if (!_setOriginalBenefits_id) {
			_setOriginalBenefits_id = true;

			_originalBenefits_id = _benefits_id;
		}

		_benefits_id = benefits_id;
	}

	public long getOriginalBenefits_id() {
		return _originalBenefits_id;
	}

	public long getBenefit_checktype() {
		return _benefit_checktype;
	}

	public void setBenefit_checktype(long benefit_checktype) {
		_columnBitmask |= BENEFIT_CHECKTYPE_COLUMN_BITMASK;

		if (!_setOriginalBenefit_checktype) {
			_setOriginalBenefit_checktype = true;

			_originalBenefit_checktype = _benefit_checktype;
		}

		_benefit_checktype = benefit_checktype;
	}

	public long getOriginalBenefit_checktype() {
		return _originalBenefit_checktype;
	}

	public long getBenefit_checksubtype() {
		return _benefit_checksubtype;
	}

	public void setBenefit_checksubtype(long benefit_checksubtype) {
		_benefit_checksubtype = benefit_checksubtype;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			benefits_type_ref.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public benefits_type_ref toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (benefits_type_ref)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		benefits_type_refImpl benefits_type_refImpl = new benefits_type_refImpl();

		benefits_type_refImpl.setBenefits_type_ref_id(getBenefits_type_ref_id());
		benefits_type_refImpl.setBenefits_id(getBenefits_id());
		benefits_type_refImpl.setBenefit_checktype(getBenefit_checktype());
		benefits_type_refImpl.setBenefit_checksubtype(getBenefit_checksubtype());

		benefits_type_refImpl.resetOriginalValues();

		return benefits_type_refImpl;
	}

	public int compareTo(benefits_type_ref benefits_type_ref) {
		long primaryKey = benefits_type_ref.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		benefits_type_ref benefits_type_ref = null;

		try {
			benefits_type_ref = (benefits_type_ref)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = benefits_type_ref.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		benefits_type_refModelImpl benefits_type_refModelImpl = this;

		benefits_type_refModelImpl._originalBenefits_id = benefits_type_refModelImpl._benefits_id;

		benefits_type_refModelImpl._setOriginalBenefits_id = false;

		benefits_type_refModelImpl._originalBenefit_checktype = benefits_type_refModelImpl._benefit_checktype;

		benefits_type_refModelImpl._setOriginalBenefit_checktype = false;

		benefits_type_refModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<benefits_type_ref> toCacheModel() {
		benefits_type_refCacheModel benefits_type_refCacheModel = new benefits_type_refCacheModel();

		benefits_type_refCacheModel.benefits_type_ref_id = getBenefits_type_ref_id();

		benefits_type_refCacheModel.benefits_id = getBenefits_id();

		benefits_type_refCacheModel.benefit_checktype = getBenefit_checktype();

		benefits_type_refCacheModel.benefit_checksubtype = getBenefit_checksubtype();

		return benefits_type_refCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{benefits_type_ref_id=");
		sb.append(getBenefits_type_ref_id());
		sb.append(", benefits_id=");
		sb.append(getBenefits_id());
		sb.append(", benefit_checktype=");
		sb.append(getBenefit_checktype());
		sb.append(", benefit_checksubtype=");
		sb.append(getBenefit_checksubtype());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.benefits_type_ref");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>benefits_type_ref_id</column-name><column-value><![CDATA[");
		sb.append(getBenefits_type_ref_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>benefits_id</column-name><column-value><![CDATA[");
		sb.append(getBenefits_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>benefit_checktype</column-name><column-value><![CDATA[");
		sb.append(getBenefit_checktype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>benefit_checksubtype</column-name><column-value><![CDATA[");
		sb.append(getBenefit_checksubtype());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = benefits_type_ref.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			benefits_type_ref.class
		};
	private long _benefits_type_ref_id;
	private long _benefits_id;
	private long _originalBenefits_id;
	private boolean _setOriginalBenefits_id;
	private long _benefit_checktype;
	private long _originalBenefit_checktype;
	private boolean _setOriginalBenefit_checktype;
	private long _benefit_checksubtype;
	private long _columnBitmask;
	private benefits_type_ref _escapedModelProxy;
}