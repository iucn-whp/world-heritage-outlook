/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion;
import com.iucn.whp.dbservice.model.assessment_whvalues_whcriterionModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the assessment_whvalues_whcriterion service. Represents a row in the &quot;whp_assessment_whvalues_whcriterion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.assessment_whvalues_whcriterionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link assessment_whvalues_whcriterionImpl}.
 * </p>
 *
 * @author alok.sen
 * @see assessment_whvalues_whcriterionImpl
 * @see com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion
 * @see com.iucn.whp.dbservice.model.assessment_whvalues_whcriterionModel
 * @generated
 */
public class assessment_whvalues_whcriterionModelImpl extends BaseModelImpl<assessment_whvalues_whcriterion>
	implements assessment_whvalues_whcriterionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a assessment_whvalues_whcriterion model instance should use the {@link com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion} interface instead.
	 */
	public static final String TABLE_NAME = "whp_assessment_whvalues_whcriterion";
	public static final Object[][] TABLE_COLUMNS = {
			{ "wh_criteria_id", Types.BIGINT },
			{ "whvalues_id", Types.BIGINT },
			{ "criterion", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_assessment_whvalues_whcriterion (wh_criteria_id LONG not null primary key,whvalues_id LONG,criterion LONG)";
	public static final String TABLE_SQL_DROP = "drop table whp_assessment_whvalues_whcriterion";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion"),
			true);
	public static long WHVALUES_ID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion"));

	public assessment_whvalues_whcriterionModelImpl() {
	}

	public long getPrimaryKey() {
		return _wh_criteria_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setWh_criteria_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_wh_criteria_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return assessment_whvalues_whcriterion.class;
	}

	public String getModelClassName() {
		return assessment_whvalues_whcriterion.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("wh_criteria_id", getWh_criteria_id());
		attributes.put("whvalues_id", getWhvalues_id());
		attributes.put("criterion", getCriterion());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long wh_criteria_id = (Long)attributes.get("wh_criteria_id");

		if (wh_criteria_id != null) {
			setWh_criteria_id(wh_criteria_id);
		}

		Long whvalues_id = (Long)attributes.get("whvalues_id");

		if (whvalues_id != null) {
			setWhvalues_id(whvalues_id);
		}

		Long criterion = (Long)attributes.get("criterion");

		if (criterion != null) {
			setCriterion(criterion);
		}
	}

	public long getWh_criteria_id() {
		return _wh_criteria_id;
	}

	public void setWh_criteria_id(long wh_criteria_id) {
		_wh_criteria_id = wh_criteria_id;
	}

	public long getWhvalues_id() {
		return _whvalues_id;
	}

	public void setWhvalues_id(long whvalues_id) {
		_columnBitmask |= WHVALUES_ID_COLUMN_BITMASK;

		if (!_setOriginalWhvalues_id) {
			_setOriginalWhvalues_id = true;

			_originalWhvalues_id = _whvalues_id;
		}

		_whvalues_id = whvalues_id;
	}

	public long getOriginalWhvalues_id() {
		return _originalWhvalues_id;
	}

	public long getCriterion() {
		return _criterion;
	}

	public void setCriterion(long criterion) {
		_criterion = criterion;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			assessment_whvalues_whcriterion.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public assessment_whvalues_whcriterion toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (assessment_whvalues_whcriterion)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		assessment_whvalues_whcriterionImpl assessment_whvalues_whcriterionImpl = new assessment_whvalues_whcriterionImpl();

		assessment_whvalues_whcriterionImpl.setWh_criteria_id(getWh_criteria_id());
		assessment_whvalues_whcriterionImpl.setWhvalues_id(getWhvalues_id());
		assessment_whvalues_whcriterionImpl.setCriterion(getCriterion());

		assessment_whvalues_whcriterionImpl.resetOriginalValues();

		return assessment_whvalues_whcriterionImpl;
	}

	public int compareTo(
		assessment_whvalues_whcriterion assessment_whvalues_whcriterion) {
		long primaryKey = assessment_whvalues_whcriterion.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		assessment_whvalues_whcriterion assessment_whvalues_whcriterion = null;

		try {
			assessment_whvalues_whcriterion = (assessment_whvalues_whcriterion)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = assessment_whvalues_whcriterion.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		assessment_whvalues_whcriterionModelImpl assessment_whvalues_whcriterionModelImpl =
			this;

		assessment_whvalues_whcriterionModelImpl._originalWhvalues_id = assessment_whvalues_whcriterionModelImpl._whvalues_id;

		assessment_whvalues_whcriterionModelImpl._setOriginalWhvalues_id = false;

		assessment_whvalues_whcriterionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<assessment_whvalues_whcriterion> toCacheModel() {
		assessment_whvalues_whcriterionCacheModel assessment_whvalues_whcriterionCacheModel =
			new assessment_whvalues_whcriterionCacheModel();

		assessment_whvalues_whcriterionCacheModel.wh_criteria_id = getWh_criteria_id();

		assessment_whvalues_whcriterionCacheModel.whvalues_id = getWhvalues_id();

		assessment_whvalues_whcriterionCacheModel.criterion = getCriterion();

		return assessment_whvalues_whcriterionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{wh_criteria_id=");
		sb.append(getWh_criteria_id());
		sb.append(", whvalues_id=");
		sb.append(getWhvalues_id());
		sb.append(", criterion=");
		sb.append(getCriterion());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append(
			"com.iucn.whp.dbservice.model.assessment_whvalues_whcriterion");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>wh_criteria_id</column-name><column-value><![CDATA[");
		sb.append(getWh_criteria_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>whvalues_id</column-name><column-value><![CDATA[");
		sb.append(getWhvalues_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>criterion</column-name><column-value><![CDATA[");
		sb.append(getCriterion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = assessment_whvalues_whcriterion.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			assessment_whvalues_whcriterion.class
		};
	private long _wh_criteria_id;
	private long _whvalues_id;
	private long _originalWhvalues_id;
	private boolean _setOriginalWhvalues_id;
	private long _criterion;
	private long _columnBitmask;
	private assessment_whvalues_whcriterion _escapedModelProxy;
}