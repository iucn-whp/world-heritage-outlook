/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.iucn.whp.dbservice.model.impl;

import com.iucn.whp.dbservice.model.whp_sites;
import com.iucn.whp.dbservice.model.whp_sitesModel;
import com.iucn.whp.dbservice.model.whp_sitesSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the whp_sites service. Represents a row in the &quot;whp_whp_sites&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.iucn.whp.dbservice.model.whp_sitesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link whp_sitesImpl}.
 * </p>
 *
 * @author alok.sen
 * @see whp_sitesImpl
 * @see com.iucn.whp.dbservice.model.whp_sites
 * @see com.iucn.whp.dbservice.model.whp_sitesModel
 * @generated
 */
@JSON(strict = true)
public class whp_sitesModelImpl extends BaseModelImpl<whp_sites>
	implements whp_sitesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a whp_sites model instance should use the {@link com.iucn.whp.dbservice.model.whp_sites} interface instead.
	 */
	public static final String TABLE_NAME = "whp_whp_sites";
	public static final Object[][] TABLE_COLUMNS = {
			{ "site_id", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "wdpa_id", Types.BIGINT },
			{ "unesco_id", Types.BIGINT },
			{ "name_en", Types.VARCHAR },
			{ "name_fr", Types.VARCHAR },
			{ "transboundary", Types.BOOLEAN },
			{ "inscription_date", Types.TIMESTAMP },
			{ "mixed_site", Types.BOOLEAN },
			{ "cultural_landscape", Types.BOOLEAN },
			{ "danger_list", Types.BOOLEAN },
			{ "area", Types.DOUBLE },
			{ "buffer_zone", Types.BOOLEAN },
			{ "buffer_zone_area", Types.DOUBLE },
			{ "boundary_modification", Types.BOOLEAN },
			{ "serial", Types.BOOLEAN },
			{ "missions", Types.BOOLEAN },
			{ "soc_reports", Types.BOOLEAN },
			{ "soouv", Types.BOOLEAN },
			{ "dsocr", Types.BOOLEAN },
			{ "management_plan", Types.BOOLEAN },
			{ "mee", Types.BOOLEAN },
			{ "staff", Types.BIGINT },
			{ "staff_update_date", Types.TIMESTAMP },
			{ "indigenous_communities", Types.BOOLEAN },
			{ "population", Types.BIGINT },
			{ "last_updated", Types.TIMESTAMP },
			{ "creation_date", Types.TIMESTAMP },
			{ "created_by", Types.BIGINT },
			{ "updated_by", Types.BIGINT },
			{ "active_", Types.BOOLEAN },
			{ "thumbnailid", Types.BIGINT },
			{ "thumbnailid_small", Types.BIGINT },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table whp_whp_sites (site_id LONG not null primary key,groupId LONG,companyId LONG,wdpa_id LONG,unesco_id LONG,name_en VARCHAR(200) null,name_fr VARCHAR(200) null,transboundary BOOLEAN,inscription_date DATE null,mixed_site BOOLEAN,cultural_landscape BOOLEAN,danger_list BOOLEAN,area DOUBLE,buffer_zone BOOLEAN,buffer_zone_area DOUBLE,boundary_modification BOOLEAN,serial BOOLEAN,missions BOOLEAN,soc_reports BOOLEAN,soouv BOOLEAN,dsocr BOOLEAN,management_plan BOOLEAN,mee BOOLEAN,staff LONG,staff_update_date DATE null,indigenous_communities BOOLEAN,population LONG,last_updated DATE null,creation_date DATE null,created_by LONG,updated_by LONG,active_ BOOLEAN,thumbnailid LONG,thumbnailid_small LONG,description STRING null)";
	public static final String TABLE_SQL_DROP = "drop table whp_whp_sites";
	public static final String ORDER_BY_JPQL = " ORDER BY whp_sites.name_en ASC";
	public static final String ORDER_BY_SQL = " ORDER BY whp_whp_sites.name_en ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.iucn.whp.dbservice.model.whp_sites"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.iucn.whp.dbservice.model.whp_sites"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.iucn.whp.dbservice.model.whp_sites"),
			true);
	public static long ACTIVE_COLUMN_BITMASK = 1L;
	public static long NAME_EN_COLUMN_BITMASK = 2L;
	public static long THUMBNAILID_COLUMN_BITMASK = 4L;
	public static long THUMBNAILID_SMALL_COLUMN_BITMASK = 8L;
	public static long WDPA_ID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static whp_sites toModel(whp_sitesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		whp_sites model = new whp_sitesImpl();

		model.setSite_id(soapModel.getSite_id());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setWdpa_id(soapModel.getWdpa_id());
		model.setUnesco_id(soapModel.getUnesco_id());
		model.setName_en(soapModel.getName_en());
		model.setName_fr(soapModel.getName_fr());
		model.setTransboundary(soapModel.getTransboundary());
		model.setInscription_date(soapModel.getInscription_date());
		model.setMixed_site(soapModel.getMixed_site());
		model.setCultural_landscape(soapModel.getCultural_landscape());
		model.setDanger_list(soapModel.getDanger_list());
		model.setArea(soapModel.getArea());
		model.setBuffer_zone(soapModel.getBuffer_zone());
		model.setBuffer_zone_area(soapModel.getBuffer_zone_area());
		model.setBoundary_modification(soapModel.getBoundary_modification());
		model.setSerial(soapModel.getSerial());
		model.setMissions(soapModel.getMissions());
		model.setSoc_reports(soapModel.getSoc_reports());
		model.setSoouv(soapModel.getSoouv());
		model.setDsocr(soapModel.getDsocr());
		model.setManagement_plan(soapModel.getManagement_plan());
		model.setMee(soapModel.getMee());
		model.setStaff(soapModel.getStaff());
		model.setStaff_update_date(soapModel.getStaff_update_date());
		model.setIndigenous_communities(soapModel.getIndigenous_communities());
		model.setPopulation(soapModel.getPopulation());
		model.setLast_updated(soapModel.getLast_updated());
		model.setCreation_date(soapModel.getCreation_date());
		model.setCreated_by(soapModel.getCreated_by());
		model.setUpdated_by(soapModel.getUpdated_by());
		model.setActive(soapModel.getActive());
		model.setThumbnailid(soapModel.getThumbnailid());
		model.setThumbnailid_small(soapModel.getThumbnailid_small());
		model.setDescription(soapModel.getDescription());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<whp_sites> toModels(whp_sitesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<whp_sites> models = new ArrayList<whp_sites>(soapModels.length);

		for (whp_sitesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.iucn.whp.dbservice.model.whp_sites"));

	public whp_sitesModelImpl() {
	}

	public long getPrimaryKey() {
		return _site_id;
	}

	public void setPrimaryKey(long primaryKey) {
		setSite_id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_site_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return whp_sites.class;
	}

	public String getModelClassName() {
		return whp_sites.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("site_id", getSite_id());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("wdpa_id", getWdpa_id());
		attributes.put("unesco_id", getUnesco_id());
		attributes.put("name_en", getName_en());
		attributes.put("name_fr", getName_fr());
		attributes.put("transboundary", getTransboundary());
		attributes.put("inscription_date", getInscription_date());
		attributes.put("mixed_site", getMixed_site());
		attributes.put("cultural_landscape", getCultural_landscape());
		attributes.put("danger_list", getDanger_list());
		attributes.put("area", getArea());
		attributes.put("buffer_zone", getBuffer_zone());
		attributes.put("buffer_zone_area", getBuffer_zone_area());
		attributes.put("boundary_modification", getBoundary_modification());
		attributes.put("serial", getSerial());
		attributes.put("missions", getMissions());
		attributes.put("soc_reports", getSoc_reports());
		attributes.put("soouv", getSoouv());
		attributes.put("dsocr", getDsocr());
		attributes.put("management_plan", getManagement_plan());
		attributes.put("mee", getMee());
		attributes.put("staff", getStaff());
		attributes.put("staff_update_date", getStaff_update_date());
		attributes.put("indigenous_communities", getIndigenous_communities());
		attributes.put("population", getPopulation());
		attributes.put("last_updated", getLast_updated());
		attributes.put("creation_date", getCreation_date());
		attributes.put("created_by", getCreated_by());
		attributes.put("updated_by", getUpdated_by());
		attributes.put("active", getActive());
		attributes.put("thumbnailid", getThumbnailid());
		attributes.put("thumbnailid_small", getThumbnailid_small());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long site_id = (Long)attributes.get("site_id");

		if (site_id != null) {
			setSite_id(site_id);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long wdpa_id = (Long)attributes.get("wdpa_id");

		if (wdpa_id != null) {
			setWdpa_id(wdpa_id);
		}

		Long unesco_id = (Long)attributes.get("unesco_id");

		if (unesco_id != null) {
			setUnesco_id(unesco_id);
		}

		String name_en = (String)attributes.get("name_en");

		if (name_en != null) {
			setName_en(name_en);
		}

		String name_fr = (String)attributes.get("name_fr");

		if (name_fr != null) {
			setName_fr(name_fr);
		}

		Boolean transboundary = (Boolean)attributes.get("transboundary");

		if (transboundary != null) {
			setTransboundary(transboundary);
		}

		Date inscription_date = (Date)attributes.get("inscription_date");

		if (inscription_date != null) {
			setInscription_date(inscription_date);
		}

		Boolean mixed_site = (Boolean)attributes.get("mixed_site");

		if (mixed_site != null) {
			setMixed_site(mixed_site);
		}

		Boolean cultural_landscape = (Boolean)attributes.get(
				"cultural_landscape");

		if (cultural_landscape != null) {
			setCultural_landscape(cultural_landscape);
		}

		Boolean danger_list = (Boolean)attributes.get("danger_list");

		if (danger_list != null) {
			setDanger_list(danger_list);
		}

		Double area = (Double)attributes.get("area");

		if (area != null) {
			setArea(area);
		}

		Boolean buffer_zone = (Boolean)attributes.get("buffer_zone");

		if (buffer_zone != null) {
			setBuffer_zone(buffer_zone);
		}

		Double buffer_zone_area = (Double)attributes.get("buffer_zone_area");

		if (buffer_zone_area != null) {
			setBuffer_zone_area(buffer_zone_area);
		}

		Boolean boundary_modification = (Boolean)attributes.get(
				"boundary_modification");

		if (boundary_modification != null) {
			setBoundary_modification(boundary_modification);
		}

		Boolean serial = (Boolean)attributes.get("serial");

		if (serial != null) {
			setSerial(serial);
		}

		Boolean missions = (Boolean)attributes.get("missions");

		if (missions != null) {
			setMissions(missions);
		}

		Boolean soc_reports = (Boolean)attributes.get("soc_reports");

		if (soc_reports != null) {
			setSoc_reports(soc_reports);
		}

		Boolean soouv = (Boolean)attributes.get("soouv");

		if (soouv != null) {
			setSoouv(soouv);
		}

		Boolean dsocr = (Boolean)attributes.get("dsocr");

		if (dsocr != null) {
			setDsocr(dsocr);
		}

		Boolean management_plan = (Boolean)attributes.get("management_plan");

		if (management_plan != null) {
			setManagement_plan(management_plan);
		}

		Boolean mee = (Boolean)attributes.get("mee");

		if (mee != null) {
			setMee(mee);
		}

		Long staff = (Long)attributes.get("staff");

		if (staff != null) {
			setStaff(staff);
		}

		Date staff_update_date = (Date)attributes.get("staff_update_date");

		if (staff_update_date != null) {
			setStaff_update_date(staff_update_date);
		}

		Boolean indigenous_communities = (Boolean)attributes.get(
				"indigenous_communities");

		if (indigenous_communities != null) {
			setIndigenous_communities(indigenous_communities);
		}

		Long population = (Long)attributes.get("population");

		if (population != null) {
			setPopulation(population);
		}

		Date last_updated = (Date)attributes.get("last_updated");

		if (last_updated != null) {
			setLast_updated(last_updated);
		}

		Date creation_date = (Date)attributes.get("creation_date");

		if (creation_date != null) {
			setCreation_date(creation_date);
		}

		Long created_by = (Long)attributes.get("created_by");

		if (created_by != null) {
			setCreated_by(created_by);
		}

		Long updated_by = (Long)attributes.get("updated_by");

		if (updated_by != null) {
			setUpdated_by(updated_by);
		}

		Boolean active = (Boolean)attributes.get("active");

		if (active != null) {
			setActive(active);
		}

		Long thumbnailid = (Long)attributes.get("thumbnailid");

		if (thumbnailid != null) {
			setThumbnailid(thumbnailid);
		}

		Long thumbnailid_small = (Long)attributes.get("thumbnailid_small");

		if (thumbnailid_small != null) {
			setThumbnailid_small(thumbnailid_small);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	@JSON
	public long getSite_id() {
		return _site_id;
	}

	public void setSite_id(long site_id) {
		_site_id = site_id;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public long getWdpa_id() {
		return _wdpa_id;
	}

	public void setWdpa_id(long wdpa_id) {
		_columnBitmask |= WDPA_ID_COLUMN_BITMASK;

		if (!_setOriginalWdpa_id) {
			_setOriginalWdpa_id = true;

			_originalWdpa_id = _wdpa_id;
		}

		_wdpa_id = wdpa_id;
	}

	public long getOriginalWdpa_id() {
		return _originalWdpa_id;
	}

	@JSON
	public long getUnesco_id() {
		return _unesco_id;
	}

	public void setUnesco_id(long unesco_id) {
		_unesco_id = unesco_id;
	}

	@JSON
	public String getName_en() {
		if (_name_en == null) {
			return StringPool.BLANK;
		}
		else {
			return _name_en;
		}
	}

	public void setName_en(String name_en) {
		_columnBitmask = -1L;

		if (_originalName_en == null) {
			_originalName_en = _name_en;
		}

		_name_en = name_en;
	}

	public String getOriginalName_en() {
		return GetterUtil.getString(_originalName_en);
	}

	@JSON
	public String getName_fr() {
		if (_name_fr == null) {
			return StringPool.BLANK;
		}
		else {
			return _name_fr;
		}
	}

	public void setName_fr(String name_fr) {
		_name_fr = name_fr;
	}

	@JSON
	public boolean getTransboundary() {
		return _transboundary;
	}

	public boolean isTransboundary() {
		return _transboundary;
	}

	public void setTransboundary(boolean transboundary) {
		_transboundary = transboundary;
	}

	@JSON
	public Date getInscription_date() {
		return _inscription_date;
	}

	public void setInscription_date(Date inscription_date) {
		_inscription_date = inscription_date;
	}

	@JSON
	public boolean getMixed_site() {
		return _mixed_site;
	}

	public boolean isMixed_site() {
		return _mixed_site;
	}

	public void setMixed_site(boolean mixed_site) {
		_mixed_site = mixed_site;
	}

	@JSON
	public boolean getCultural_landscape() {
		return _cultural_landscape;
	}

	public boolean isCultural_landscape() {
		return _cultural_landscape;
	}

	public void setCultural_landscape(boolean cultural_landscape) {
		_cultural_landscape = cultural_landscape;
	}

	@JSON
	public boolean getDanger_list() {
		return _danger_list;
	}

	public boolean isDanger_list() {
		return _danger_list;
	}

	public void setDanger_list(boolean danger_list) {
		_danger_list = danger_list;
	}

	@JSON
	public double getArea() {
		return _area;
	}

	public void setArea(double area) {
		_area = area;
	}

	@JSON
	public boolean getBuffer_zone() {
		return _buffer_zone;
	}

	public boolean isBuffer_zone() {
		return _buffer_zone;
	}

	public void setBuffer_zone(boolean buffer_zone) {
		_buffer_zone = buffer_zone;
	}

	@JSON
	public double getBuffer_zone_area() {
		return _buffer_zone_area;
	}

	public void setBuffer_zone_area(double buffer_zone_area) {
		_buffer_zone_area = buffer_zone_area;
	}

	@JSON
	public boolean getBoundary_modification() {
		return _boundary_modification;
	}

	public boolean isBoundary_modification() {
		return _boundary_modification;
	}

	public void setBoundary_modification(boolean boundary_modification) {
		_boundary_modification = boundary_modification;
	}

	@JSON
	public boolean getSerial() {
		return _serial;
	}

	public boolean isSerial() {
		return _serial;
	}

	public void setSerial(boolean serial) {
		_serial = serial;
	}

	@JSON
	public boolean getMissions() {
		return _missions;
	}

	public boolean isMissions() {
		return _missions;
	}

	public void setMissions(boolean missions) {
		_missions = missions;
	}

	@JSON
	public boolean getSoc_reports() {
		return _soc_reports;
	}

	public boolean isSoc_reports() {
		return _soc_reports;
	}

	public void setSoc_reports(boolean soc_reports) {
		_soc_reports = soc_reports;
	}

	@JSON
	public boolean getSoouv() {
		return _soouv;
	}

	public boolean isSoouv() {
		return _soouv;
	}

	public void setSoouv(boolean soouv) {
		_soouv = soouv;
	}

	@JSON
	public boolean getDsocr() {
		return _dsocr;
	}

	public boolean isDsocr() {
		return _dsocr;
	}

	public void setDsocr(boolean dsocr) {
		_dsocr = dsocr;
	}

	@JSON
	public boolean getManagement_plan() {
		return _management_plan;
	}

	public boolean isManagement_plan() {
		return _management_plan;
	}

	public void setManagement_plan(boolean management_plan) {
		_management_plan = management_plan;
	}

	@JSON
	public boolean getMee() {
		return _mee;
	}

	public boolean isMee() {
		return _mee;
	}

	public void setMee(boolean mee) {
		_mee = mee;
	}

	@JSON
	public long getStaff() {
		return _staff;
	}

	public void setStaff(long staff) {
		_staff = staff;
	}

	@JSON
	public Date getStaff_update_date() {
		return _staff_update_date;
	}

	public void setStaff_update_date(Date staff_update_date) {
		_staff_update_date = staff_update_date;
	}

	@JSON
	public boolean getIndigenous_communities() {
		return _indigenous_communities;
	}

	public boolean isIndigenous_communities() {
		return _indigenous_communities;
	}

	public void setIndigenous_communities(boolean indigenous_communities) {
		_indigenous_communities = indigenous_communities;
	}

	@JSON
	public long getPopulation() {
		return _population;
	}

	public void setPopulation(long population) {
		_population = population;
	}

	@JSON
	public Date getLast_updated() {
		return _last_updated;
	}

	public void setLast_updated(Date last_updated) {
		_last_updated = last_updated;
	}

	@JSON
	public Date getCreation_date() {
		return _creation_date;
	}

	public void setCreation_date(Date creation_date) {
		_creation_date = creation_date;
	}

	@JSON
	public long getCreated_by() {
		return _created_by;
	}

	public void setCreated_by(long created_by) {
		_created_by = created_by;
	}

	@JSON
	public long getUpdated_by() {
		return _updated_by;
	}

	public void setUpdated_by(long updated_by) {
		_updated_by = updated_by;
	}

	@JSON
	public boolean getActive() {
		return _active;
	}

	public boolean isActive() {
		return _active;
	}

	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	@JSON
	public long getThumbnailid() {
		return _thumbnailid;
	}

	public void setThumbnailid(long thumbnailid) {
		_columnBitmask |= THUMBNAILID_COLUMN_BITMASK;

		if (!_setOriginalThumbnailid) {
			_setOriginalThumbnailid = true;

			_originalThumbnailid = _thumbnailid;
		}

		_thumbnailid = thumbnailid;
	}

	public long getOriginalThumbnailid() {
		return _originalThumbnailid;
	}

	@JSON
	public long getThumbnailid_small() {
		return _thumbnailid_small;
	}

	public void setThumbnailid_small(long thumbnailid_small) {
		_columnBitmask |= THUMBNAILID_SMALL_COLUMN_BITMASK;

		if (!_setOriginalThumbnailid_small) {
			_setOriginalThumbnailid_small = true;

			_originalThumbnailid_small = _thumbnailid_small;
		}

		_thumbnailid_small = thumbnailid_small;
	}

	public long getOriginalThumbnailid_small() {
		return _originalThumbnailid_small;
	}

	@JSON
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			whp_sites.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public whp_sites toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (whp_sites)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		whp_sitesImpl whp_sitesImpl = new whp_sitesImpl();

		whp_sitesImpl.setSite_id(getSite_id());
		whp_sitesImpl.setGroupId(getGroupId());
		whp_sitesImpl.setCompanyId(getCompanyId());
		whp_sitesImpl.setWdpa_id(getWdpa_id());
		whp_sitesImpl.setUnesco_id(getUnesco_id());
		whp_sitesImpl.setName_en(getName_en());
		whp_sitesImpl.setName_fr(getName_fr());
		whp_sitesImpl.setTransboundary(getTransboundary());
		whp_sitesImpl.setInscription_date(getInscription_date());
		whp_sitesImpl.setMixed_site(getMixed_site());
		whp_sitesImpl.setCultural_landscape(getCultural_landscape());
		whp_sitesImpl.setDanger_list(getDanger_list());
		whp_sitesImpl.setArea(getArea());
		whp_sitesImpl.setBuffer_zone(getBuffer_zone());
		whp_sitesImpl.setBuffer_zone_area(getBuffer_zone_area());
		whp_sitesImpl.setBoundary_modification(getBoundary_modification());
		whp_sitesImpl.setSerial(getSerial());
		whp_sitesImpl.setMissions(getMissions());
		whp_sitesImpl.setSoc_reports(getSoc_reports());
		whp_sitesImpl.setSoouv(getSoouv());
		whp_sitesImpl.setDsocr(getDsocr());
		whp_sitesImpl.setManagement_plan(getManagement_plan());
		whp_sitesImpl.setMee(getMee());
		whp_sitesImpl.setStaff(getStaff());
		whp_sitesImpl.setStaff_update_date(getStaff_update_date());
		whp_sitesImpl.setIndigenous_communities(getIndigenous_communities());
		whp_sitesImpl.setPopulation(getPopulation());
		whp_sitesImpl.setLast_updated(getLast_updated());
		whp_sitesImpl.setCreation_date(getCreation_date());
		whp_sitesImpl.setCreated_by(getCreated_by());
		whp_sitesImpl.setUpdated_by(getUpdated_by());
		whp_sitesImpl.setActive(getActive());
		whp_sitesImpl.setThumbnailid(getThumbnailid());
		whp_sitesImpl.setThumbnailid_small(getThumbnailid_small());
		whp_sitesImpl.setDescription(getDescription());

		whp_sitesImpl.resetOriginalValues();

		return whp_sitesImpl;
	}

	public int compareTo(whp_sites whp_sites) {
		int value = 0;

		value = getName_en().compareTo(whp_sites.getName_en());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		whp_sites whp_sites = null;

		try {
			whp_sites = (whp_sites)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = whp_sites.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		whp_sitesModelImpl whp_sitesModelImpl = this;

		whp_sitesModelImpl._originalWdpa_id = whp_sitesModelImpl._wdpa_id;

		whp_sitesModelImpl._setOriginalWdpa_id = false;

		whp_sitesModelImpl._originalName_en = whp_sitesModelImpl._name_en;

		whp_sitesModelImpl._originalActive = whp_sitesModelImpl._active;

		whp_sitesModelImpl._setOriginalActive = false;

		whp_sitesModelImpl._originalThumbnailid = whp_sitesModelImpl._thumbnailid;

		whp_sitesModelImpl._setOriginalThumbnailid = false;

		whp_sitesModelImpl._originalThumbnailid_small = whp_sitesModelImpl._thumbnailid_small;

		whp_sitesModelImpl._setOriginalThumbnailid_small = false;

		whp_sitesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<whp_sites> toCacheModel() {
		whp_sitesCacheModel whp_sitesCacheModel = new whp_sitesCacheModel();

		whp_sitesCacheModel.site_id = getSite_id();

		whp_sitesCacheModel.groupId = getGroupId();

		whp_sitesCacheModel.companyId = getCompanyId();

		whp_sitesCacheModel.wdpa_id = getWdpa_id();

		whp_sitesCacheModel.unesco_id = getUnesco_id();

		whp_sitesCacheModel.name_en = getName_en();

		String name_en = whp_sitesCacheModel.name_en;

		if ((name_en != null) && (name_en.length() == 0)) {
			whp_sitesCacheModel.name_en = null;
		}

		whp_sitesCacheModel.name_fr = getName_fr();

		String name_fr = whp_sitesCacheModel.name_fr;

		if ((name_fr != null) && (name_fr.length() == 0)) {
			whp_sitesCacheModel.name_fr = null;
		}

		whp_sitesCacheModel.transboundary = getTransboundary();

		Date inscription_date = getInscription_date();

		if (inscription_date != null) {
			whp_sitesCacheModel.inscription_date = inscription_date.getTime();
		}
		else {
			whp_sitesCacheModel.inscription_date = Long.MIN_VALUE;
		}

		whp_sitesCacheModel.mixed_site = getMixed_site();

		whp_sitesCacheModel.cultural_landscape = getCultural_landscape();

		whp_sitesCacheModel.danger_list = getDanger_list();

		whp_sitesCacheModel.area = getArea();

		whp_sitesCacheModel.buffer_zone = getBuffer_zone();

		whp_sitesCacheModel.buffer_zone_area = getBuffer_zone_area();

		whp_sitesCacheModel.boundary_modification = getBoundary_modification();

		whp_sitesCacheModel.serial = getSerial();

		whp_sitesCacheModel.missions = getMissions();

		whp_sitesCacheModel.soc_reports = getSoc_reports();

		whp_sitesCacheModel.soouv = getSoouv();

		whp_sitesCacheModel.dsocr = getDsocr();

		whp_sitesCacheModel.management_plan = getManagement_plan();

		whp_sitesCacheModel.mee = getMee();

		whp_sitesCacheModel.staff = getStaff();

		Date staff_update_date = getStaff_update_date();

		if (staff_update_date != null) {
			whp_sitesCacheModel.staff_update_date = staff_update_date.getTime();
		}
		else {
			whp_sitesCacheModel.staff_update_date = Long.MIN_VALUE;
		}

		whp_sitesCacheModel.indigenous_communities = getIndigenous_communities();

		whp_sitesCacheModel.population = getPopulation();

		Date last_updated = getLast_updated();

		if (last_updated != null) {
			whp_sitesCacheModel.last_updated = last_updated.getTime();
		}
		else {
			whp_sitesCacheModel.last_updated = Long.MIN_VALUE;
		}

		Date creation_date = getCreation_date();

		if (creation_date != null) {
			whp_sitesCacheModel.creation_date = creation_date.getTime();
		}
		else {
			whp_sitesCacheModel.creation_date = Long.MIN_VALUE;
		}

		whp_sitesCacheModel.created_by = getCreated_by();

		whp_sitesCacheModel.updated_by = getUpdated_by();

		whp_sitesCacheModel.active = getActive();

		whp_sitesCacheModel.thumbnailid = getThumbnailid();

		whp_sitesCacheModel.thumbnailid_small = getThumbnailid_small();

		whp_sitesCacheModel.description = getDescription();

		String description = whp_sitesCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			whp_sitesCacheModel.description = null;
		}

		return whp_sitesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(71);

		sb.append("{site_id=");
		sb.append(getSite_id());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", wdpa_id=");
		sb.append(getWdpa_id());
		sb.append(", unesco_id=");
		sb.append(getUnesco_id());
		sb.append(", name_en=");
		sb.append(getName_en());
		sb.append(", name_fr=");
		sb.append(getName_fr());
		sb.append(", transboundary=");
		sb.append(getTransboundary());
		sb.append(", inscription_date=");
		sb.append(getInscription_date());
		sb.append(", mixed_site=");
		sb.append(getMixed_site());
		sb.append(", cultural_landscape=");
		sb.append(getCultural_landscape());
		sb.append(", danger_list=");
		sb.append(getDanger_list());
		sb.append(", area=");
		sb.append(getArea());
		sb.append(", buffer_zone=");
		sb.append(getBuffer_zone());
		sb.append(", buffer_zone_area=");
		sb.append(getBuffer_zone_area());
		sb.append(", boundary_modification=");
		sb.append(getBoundary_modification());
		sb.append(", serial=");
		sb.append(getSerial());
		sb.append(", missions=");
		sb.append(getMissions());
		sb.append(", soc_reports=");
		sb.append(getSoc_reports());
		sb.append(", soouv=");
		sb.append(getSoouv());
		sb.append(", dsocr=");
		sb.append(getDsocr());
		sb.append(", management_plan=");
		sb.append(getManagement_plan());
		sb.append(", mee=");
		sb.append(getMee());
		sb.append(", staff=");
		sb.append(getStaff());
		sb.append(", staff_update_date=");
		sb.append(getStaff_update_date());
		sb.append(", indigenous_communities=");
		sb.append(getIndigenous_communities());
		sb.append(", population=");
		sb.append(getPopulation());
		sb.append(", last_updated=");
		sb.append(getLast_updated());
		sb.append(", creation_date=");
		sb.append(getCreation_date());
		sb.append(", created_by=");
		sb.append(getCreated_by());
		sb.append(", updated_by=");
		sb.append(getUpdated_by());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", thumbnailid=");
		sb.append(getThumbnailid());
		sb.append(", thumbnailid_small=");
		sb.append(getThumbnailid_small());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(109);

		sb.append("<model><model-name>");
		sb.append("com.iucn.whp.dbservice.model.whp_sites");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>site_id</column-name><column-value><![CDATA[");
		sb.append(getSite_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wdpa_id</column-name><column-value><![CDATA[");
		sb.append(getWdpa_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unesco_id</column-name><column-value><![CDATA[");
		sb.append(getUnesco_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name_en</column-name><column-value><![CDATA[");
		sb.append(getName_en());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name_fr</column-name><column-value><![CDATA[");
		sb.append(getName_fr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transboundary</column-name><column-value><![CDATA[");
		sb.append(getTransboundary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inscription_date</column-name><column-value><![CDATA[");
		sb.append(getInscription_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mixed_site</column-name><column-value><![CDATA[");
		sb.append(getMixed_site());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cultural_landscape</column-name><column-value><![CDATA[");
		sb.append(getCultural_landscape());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>danger_list</column-name><column-value><![CDATA[");
		sb.append(getDanger_list());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>area</column-name><column-value><![CDATA[");
		sb.append(getArea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>buffer_zone</column-name><column-value><![CDATA[");
		sb.append(getBuffer_zone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>buffer_zone_area</column-name><column-value><![CDATA[");
		sb.append(getBuffer_zone_area());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>boundary_modification</column-name><column-value><![CDATA[");
		sb.append(getBoundary_modification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serial</column-name><column-value><![CDATA[");
		sb.append(getSerial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>missions</column-name><column-value><![CDATA[");
		sb.append(getMissions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soc_reports</column-name><column-value><![CDATA[");
		sb.append(getSoc_reports());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soouv</column-name><column-value><![CDATA[");
		sb.append(getSoouv());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dsocr</column-name><column-value><![CDATA[");
		sb.append(getDsocr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>management_plan</column-name><column-value><![CDATA[");
		sb.append(getManagement_plan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mee</column-name><column-value><![CDATA[");
		sb.append(getMee());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff</column-name><column-value><![CDATA[");
		sb.append(getStaff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>staff_update_date</column-name><column-value><![CDATA[");
		sb.append(getStaff_update_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>indigenous_communities</column-name><column-value><![CDATA[");
		sb.append(getIndigenous_communities());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>population</column-name><column-value><![CDATA[");
		sb.append(getPopulation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>last_updated</column-name><column-value><![CDATA[");
		sb.append(getLast_updated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>creation_date</column-name><column-value><![CDATA[");
		sb.append(getCreation_date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_by</column-name><column-value><![CDATA[");
		sb.append(getCreated_by());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updated_by</column-name><column-value><![CDATA[");
		sb.append(getUpdated_by());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailid</column-name><column-value><![CDATA[");
		sb.append(getThumbnailid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailid_small</column-name><column-value><![CDATA[");
		sb.append(getThumbnailid_small());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = whp_sites.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			whp_sites.class
		};
	private long _site_id;
	private long _groupId;
	private long _companyId;
	private long _wdpa_id;
	private long _originalWdpa_id;
	private boolean _setOriginalWdpa_id;
	private long _unesco_id;
	private String _name_en;
	private String _originalName_en;
	private String _name_fr;
	private boolean _transboundary;
	private Date _inscription_date;
	private boolean _mixed_site;
	private boolean _cultural_landscape;
	private boolean _danger_list;
	private double _area;
	private boolean _buffer_zone;
	private double _buffer_zone_area;
	private boolean _boundary_modification;
	private boolean _serial;
	private boolean _missions;
	private boolean _soc_reports;
	private boolean _soouv;
	private boolean _dsocr;
	private boolean _management_plan;
	private boolean _mee;
	private long _staff;
	private Date _staff_update_date;
	private boolean _indigenous_communities;
	private long _population;
	private Date _last_updated;
	private Date _creation_date;
	private long _created_by;
	private long _updated_by;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private long _thumbnailid;
	private long _originalThumbnailid;
	private boolean _setOriginalThumbnailid;
	private long _thumbnailid_small;
	private long _originalThumbnailid_small;
	private boolean _setOriginalThumbnailid_small;
	private String _description;
	private long _columnBitmask;
	private whp_sites _escapedModelProxy;
}